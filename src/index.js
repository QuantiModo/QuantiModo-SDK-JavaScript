/**
 * QuantiModo
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do). 
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['quantimodoApi/ApiClient', 'quantimodoApi/quantimodoApi/CommonResponse', 'quantimodoApi/quantimodoApi/Connection', 'quantimodoApi/quantimodoApi/Connector', 'quantimodoApi/quantimodoApi/ConnectorInfo', 'quantimodoApi/quantimodoApi/ConnectorInfoHistoryItem', 'quantimodoApi/quantimodoApi/ConnectorInstruction', 'quantimodoApi/quantimodoApi/ConversionStep', 'quantimodoApi/quantimodoApi/Correlation', 'quantimodoApi/quantimodoApi/HumanTime', 'quantimodoApi/quantimodoApi/InlineResponse200', 'quantimodoApi/quantimodoApi/InlineResponse2001', 'quantimodoApi/quantimodoApi/InlineResponse2002', 'quantimodoApi/quantimodoApi/JsonErrorResponse', 'quantimodoApi/quantimodoApi/Measurement', 'quantimodoApi/quantimodoApi/MeasurementDelete', 'quantimodoApi/quantimodoApi/MeasurementRange', 'quantimodoApi/quantimodoApi/MeasurementSet', 'quantimodoApi/quantimodoApi/MeasurementSource', 'quantimodoApi/quantimodoApi/MeasurementUpdate', 'quantimodoApi/quantimodoApi/Pairs', 'quantimodoApi/quantimodoApi/Permission', 'quantimodoApi/quantimodoApi/PostCorrelation', 'quantimodoApi/quantimodoApi/PostVote', 'quantimodoApi/quantimodoApi/TrackingReminder', 'quantimodoApi/quantimodoApi/TrackingReminderDelete', 'quantimodoApi/quantimodoApi/TrackingReminderNotification', 'quantimodoApi/quantimodoApi/TrackingReminderNotificationSkip', 'quantimodoApi/quantimodoApi/TrackingReminderNotificationSnooze', 'quantimodoApi/quantimodoApi/TrackingReminderNotificationTrack', 'quantimodoApi/quantimodoApi/Unit', 'quantimodoApi/quantimodoApi/UnitCategory', 'quantimodoApi/quantimodoApi/Update', 'quantimodoApi/quantimodoApi/User', 'quantimodoApi/quantimodoApi/UserTag', 'quantimodoApi/quantimodoApi/UserTokenFailedResponse', 'quantimodoApi/quantimodoApi/UserTokenRequest', 'quantimodoApi/quantimodoApi/UserTokenRequestInnerUserField', 'quantimodoApi/quantimodoApi/UserTokenSuccessfulResponse', 'quantimodoApi/quantimodoApi/UserTokenSuccessfulResponseInnerUserField', 'quantimodoApi/quantimodoApi/UserVariable', 'quantimodoApi/quantimodoApi/UserVariableDelete', 'quantimodoApi/quantimodoApi/UserVariableRelationship', 'quantimodoApi/quantimodoApi/UserVariables', 'quantimodoApi/quantimodoApi/ValueObject', 'quantimodoApi/quantimodoApi/Variable', 'quantimodoApi/quantimodoApi/VariableCategory', 'quantimodoApi/quantimodoApi/VariableNew', 'quantimodoApi/quantimodoApi/VariablesNew', 'quantimodoApi/quantimodoApi/Vote', 'quantimodoApi/quantimodoApi/VoteDelete', 'quantimodoApi/QuantiModoApi/AuthenticationApi', 'quantimodoApi/QuantiModoApi/ConnectorsApi', 'quantimodoApi/QuantiModoApi/CorrelationsApi', 'quantimodoApi/QuantiModoApi/MeasurementsApi', 'quantimodoApi/QuantiModoApi/OrganizationsApi', 'quantimodoApi/QuantiModoApi/PairsApi', 'quantimodoApi/QuantiModoApi/RemindersApi', 'quantimodoApi/QuantiModoApi/TagsApi', 'quantimodoApi/QuantiModoApi/UnitsApi', 'quantimodoApi/QuantiModoApi/UserApi', 'quantimodoApi/QuantiModoApi/VariablesApi', 'quantimodoApi/QuantiModoApi/VotesApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./quantimodoApi/CommonResponse'), require('./quantimodoApi/Connection'), require('./quantimodoApi/Connector'), require('./quantimodoApi/ConnectorInfo'), require('./quantimodoApi/ConnectorInfoHistoryItem'), require('./quantimodoApi/ConnectorInstruction'), require('./quantimodoApi/ConversionStep'), require('./quantimodoApi/Correlation'), require('./quantimodoApi/HumanTime'), require('./quantimodoApi/InlineResponse200'), require('./quantimodoApi/InlineResponse2001'), require('./quantimodoApi/InlineResponse2002'), require('./quantimodoApi/JsonErrorResponse'), require('./quantimodoApi/Measurement'), require('./quantimodoApi/MeasurementDelete'), require('./quantimodoApi/MeasurementRange'), require('./quantimodoApi/MeasurementSet'), require('./quantimodoApi/MeasurementSource'), require('./quantimodoApi/MeasurementUpdate'), require('./quantimodoApi/Pairs'), require('./quantimodoApi/Permission'), require('./quantimodoApi/PostCorrelation'), require('./quantimodoApi/PostVote'), require('./quantimodoApi/TrackingReminder'), require('./quantimodoApi/TrackingReminderDelete'), require('./quantimodoApi/TrackingReminderNotification'), require('./quantimodoApi/TrackingReminderNotificationSkip'), require('./quantimodoApi/TrackingReminderNotificationSnooze'), require('./quantimodoApi/TrackingReminderNotificationTrack'), require('./quantimodoApi/Unit'), require('./quantimodoApi/UnitCategory'), require('./quantimodoApi/Update'), require('./quantimodoApi/User'), require('./quantimodoApi/UserTag'), require('./quantimodoApi/UserTokenFailedResponse'), require('./quantimodoApi/UserTokenRequest'), require('./quantimodoApi/UserTokenRequestInnerUserField'), require('./quantimodoApi/UserTokenSuccessfulResponse'), require('./quantimodoApi/UserTokenSuccessfulResponseInnerUserField'), require('./quantimodoApi/UserVariable'), require('./quantimodoApi/UserVariableDelete'), require('./quantimodoApi/UserVariableRelationship'), require('./quantimodoApi/UserVariables'), require('./quantimodoApi/ValueObject'), require('./quantimodoApi/Variable'), require('./quantimodoApi/VariableCategory'), require('./quantimodoApi/VariableNew'), require('./quantimodoApi/VariablesNew'), require('./quantimodoApi/Vote'), require('./quantimodoApi/VoteDelete'), require('./QuantiModoApi/AuthenticationApi'), require('./QuantiModoApi/ConnectorsApi'), require('./QuantiModoApi/CorrelationsApi'), require('./QuantiModoApi/MeasurementsApi'), require('./QuantiModoApi/OrganizationsApi'), require('./QuantiModoApi/PairsApi'), require('./QuantiModoApi/RemindersApi'), require('./QuantiModoApi/TagsApi'), require('./QuantiModoApi/UnitsApi'), require('./QuantiModoApi/UserApi'), require('./QuantiModoApi/VariablesApi'), require('./QuantiModoApi/VotesApi'));
  }
}(function(ApiClient, CommonResponse, Connection, Connector, ConnectorInfo, ConnectorInfoHistoryItem, ConnectorInstruction, ConversionStep, Correlation, HumanTime, InlineResponse200, InlineResponse2001, InlineResponse2002, JsonErrorResponse, Measurement, MeasurementDelete, MeasurementRange, MeasurementSet, MeasurementSource, MeasurementUpdate, Pairs, Permission, PostCorrelation, PostVote, TrackingReminder, TrackingReminderDelete, TrackingReminderNotification, TrackingReminderNotificationSkip, TrackingReminderNotificationSnooze, TrackingReminderNotificationTrack, Unit, UnitCategory, Update, User, UserTag, UserTokenFailedResponse, UserTokenRequest, UserTokenRequestInnerUserField, UserTokenSuccessfulResponse, UserTokenSuccessfulResponseInnerUserField, UserVariable, UserVariableDelete, UserVariableRelationship, UserVariables, ValueObject, Variable, VariableCategory, VariableNew, VariablesNew, Vote, VoteDelete, AuthenticationApi, ConnectorsApi, CorrelationsApi, MeasurementsApi, OrganizationsApi, PairsApi, RemindersApi, TagsApi, UnitsApi, UserApi, VariablesApi, VotesApi) {
  'use strict';

  /**
   * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do). .<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var quantimodoApi = require('quantimodoApi/index'); // See note below*.
   * var xxxSvc = new quantimodoApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new quantimodoApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['quantimodoApi/index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new quantimodoApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new quantimodoApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module quantimodoApi/index
   * @version 5.8.724
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:quantimodoApi/ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The CommonResponse model constructor.
     * @property {module:quantimodoApi/quantimodoApi/CommonResponse}
     */
    CommonResponse: CommonResponse,
    /**
     * The Connection model constructor.
     * @property {module:quantimodoApi/quantimodoApi/Connection}
     */
    Connection: Connection,
    /**
     * The Connector model constructor.
     * @property {module:quantimodoApi/quantimodoApi/Connector}
     */
    Connector: Connector,
    /**
     * The ConnectorInfo model constructor.
     * @property {module:quantimodoApi/quantimodoApi/ConnectorInfo}
     */
    ConnectorInfo: ConnectorInfo,
    /**
     * The ConnectorInfoHistoryItem model constructor.
     * @property {module:quantimodoApi/quantimodoApi/ConnectorInfoHistoryItem}
     */
    ConnectorInfoHistoryItem: ConnectorInfoHistoryItem,
    /**
     * The ConnectorInstruction model constructor.
     * @property {module:quantimodoApi/quantimodoApi/ConnectorInstruction}
     */
    ConnectorInstruction: ConnectorInstruction,
    /**
     * The ConversionStep model constructor.
     * @property {module:quantimodoApi/quantimodoApi/ConversionStep}
     */
    ConversionStep: ConversionStep,
    /**
     * The Correlation model constructor.
     * @property {module:quantimodoApi/quantimodoApi/Correlation}
     */
    Correlation: Correlation,
    /**
     * The HumanTime model constructor.
     * @property {module:quantimodoApi/quantimodoApi/HumanTime}
     */
    HumanTime: HumanTime,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:quantimodoApi/quantimodoApi/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse2001 model constructor.
     * @property {module:quantimodoApi/quantimodoApi/InlineResponse2001}
     */
    InlineResponse2001: InlineResponse2001,
    /**
     * The InlineResponse2002 model constructor.
     * @property {module:quantimodoApi/quantimodoApi/InlineResponse2002}
     */
    InlineResponse2002: InlineResponse2002,
    /**
     * The JsonErrorResponse model constructor.
     * @property {module:quantimodoApi/quantimodoApi/JsonErrorResponse}
     */
    JsonErrorResponse: JsonErrorResponse,
    /**
     * The Measurement model constructor.
     * @property {module:quantimodoApi/quantimodoApi/Measurement}
     */
    Measurement: Measurement,
    /**
     * The MeasurementDelete model constructor.
     * @property {module:quantimodoApi/quantimodoApi/MeasurementDelete}
     */
    MeasurementDelete: MeasurementDelete,
    /**
     * The MeasurementRange model constructor.
     * @property {module:quantimodoApi/quantimodoApi/MeasurementRange}
     */
    MeasurementRange: MeasurementRange,
    /**
     * The MeasurementSet model constructor.
     * @property {module:quantimodoApi/quantimodoApi/MeasurementSet}
     */
    MeasurementSet: MeasurementSet,
    /**
     * The MeasurementSource model constructor.
     * @property {module:quantimodoApi/quantimodoApi/MeasurementSource}
     */
    MeasurementSource: MeasurementSource,
    /**
     * The MeasurementUpdate model constructor.
     * @property {module:quantimodoApi/quantimodoApi/MeasurementUpdate}
     */
    MeasurementUpdate: MeasurementUpdate,
    /**
     * The Pairs model constructor.
     * @property {module:quantimodoApi/quantimodoApi/Pairs}
     */
    Pairs: Pairs,
    /**
     * The Permission model constructor.
     * @property {module:quantimodoApi/quantimodoApi/Permission}
     */
    Permission: Permission,
    /**
     * The PostCorrelation model constructor.
     * @property {module:quantimodoApi/quantimodoApi/PostCorrelation}
     */
    PostCorrelation: PostCorrelation,
    /**
     * The PostVote model constructor.
     * @property {module:quantimodoApi/quantimodoApi/PostVote}
     */
    PostVote: PostVote,
    /**
     * The TrackingReminder model constructor.
     * @property {module:quantimodoApi/quantimodoApi/TrackingReminder}
     */
    TrackingReminder: TrackingReminder,
    /**
     * The TrackingReminderDelete model constructor.
     * @property {module:quantimodoApi/quantimodoApi/TrackingReminderDelete}
     */
    TrackingReminderDelete: TrackingReminderDelete,
    /**
     * The TrackingReminderNotification model constructor.
     * @property {module:quantimodoApi/quantimodoApi/TrackingReminderNotification}
     */
    TrackingReminderNotification: TrackingReminderNotification,
    /**
     * The TrackingReminderNotificationSkip model constructor.
     * @property {module:quantimodoApi/quantimodoApi/TrackingReminderNotificationSkip}
     */
    TrackingReminderNotificationSkip: TrackingReminderNotificationSkip,
    /**
     * The TrackingReminderNotificationSnooze model constructor.
     * @property {module:quantimodoApi/quantimodoApi/TrackingReminderNotificationSnooze}
     */
    TrackingReminderNotificationSnooze: TrackingReminderNotificationSnooze,
    /**
     * The TrackingReminderNotificationTrack model constructor.
     * @property {module:quantimodoApi/quantimodoApi/TrackingReminderNotificationTrack}
     */
    TrackingReminderNotificationTrack: TrackingReminderNotificationTrack,
    /**
     * The Unit model constructor.
     * @property {module:quantimodoApi/quantimodoApi/Unit}
     */
    Unit: Unit,
    /**
     * The UnitCategory model constructor.
     * @property {module:quantimodoApi/quantimodoApi/UnitCategory}
     */
    UnitCategory: UnitCategory,
    /**
     * The Update model constructor.
     * @property {module:quantimodoApi/quantimodoApi/Update}
     */
    Update: Update,
    /**
     * The User model constructor.
     * @property {module:quantimodoApi/quantimodoApi/User}
     */
    User: User,
    /**
     * The UserTag model constructor.
     * @property {module:quantimodoApi/quantimodoApi/UserTag}
     */
    UserTag: UserTag,
    /**
     * The UserTokenFailedResponse model constructor.
     * @property {module:quantimodoApi/quantimodoApi/UserTokenFailedResponse}
     */
    UserTokenFailedResponse: UserTokenFailedResponse,
    /**
     * The UserTokenRequest model constructor.
     * @property {module:quantimodoApi/quantimodoApi/UserTokenRequest}
     */
    UserTokenRequest: UserTokenRequest,
    /**
     * The UserTokenRequestInnerUserField model constructor.
     * @property {module:quantimodoApi/quantimodoApi/UserTokenRequestInnerUserField}
     */
    UserTokenRequestInnerUserField: UserTokenRequestInnerUserField,
    /**
     * The UserTokenSuccessfulResponse model constructor.
     * @property {module:quantimodoApi/quantimodoApi/UserTokenSuccessfulResponse}
     */
    UserTokenSuccessfulResponse: UserTokenSuccessfulResponse,
    /**
     * The UserTokenSuccessfulResponseInnerUserField model constructor.
     * @property {module:quantimodoApi/quantimodoApi/UserTokenSuccessfulResponseInnerUserField}
     */
    UserTokenSuccessfulResponseInnerUserField: UserTokenSuccessfulResponseInnerUserField,
    /**
     * The UserVariable model constructor.
     * @property {module:quantimodoApi/quantimodoApi/UserVariable}
     */
    UserVariable: UserVariable,
    /**
     * The UserVariableDelete model constructor.
     * @property {module:quantimodoApi/quantimodoApi/UserVariableDelete}
     */
    UserVariableDelete: UserVariableDelete,
    /**
     * The UserVariableRelationship model constructor.
     * @property {module:quantimodoApi/quantimodoApi/UserVariableRelationship}
     */
    UserVariableRelationship: UserVariableRelationship,
    /**
     * The UserVariables model constructor.
     * @property {module:quantimodoApi/quantimodoApi/UserVariables}
     */
    UserVariables: UserVariables,
    /**
     * The ValueObject model constructor.
     * @property {module:quantimodoApi/quantimodoApi/ValueObject}
     */
    ValueObject: ValueObject,
    /**
     * The Variable model constructor.
     * @property {module:quantimodoApi/quantimodoApi/Variable}
     */
    Variable: Variable,
    /**
     * The VariableCategory model constructor.
     * @property {module:quantimodoApi/quantimodoApi/VariableCategory}
     */
    VariableCategory: VariableCategory,
    /**
     * The VariableNew model constructor.
     * @property {module:quantimodoApi/quantimodoApi/VariableNew}
     */
    VariableNew: VariableNew,
    /**
     * The VariablesNew model constructor.
     * @property {module:quantimodoApi/quantimodoApi/VariablesNew}
     */
    VariablesNew: VariablesNew,
    /**
     * The Vote model constructor.
     * @property {module:quantimodoApi/quantimodoApi/Vote}
     */
    Vote: Vote,
    /**
     * The VoteDelete model constructor.
     * @property {module:quantimodoApi/quantimodoApi/VoteDelete}
     */
    VoteDelete: VoteDelete,
    /**
     * The AuthenticationApi service constructor.
     * @property {module:quantimodoApi/QuantiModoApi/AuthenticationApi}
     */
    AuthenticationApi: AuthenticationApi,
    /**
     * The ConnectorsApi service constructor.
     * @property {module:quantimodoApi/QuantiModoApi/ConnectorsApi}
     */
    ConnectorsApi: ConnectorsApi,
    /**
     * The CorrelationsApi service constructor.
     * @property {module:quantimodoApi/QuantiModoApi/CorrelationsApi}
     */
    CorrelationsApi: CorrelationsApi,
    /**
     * The MeasurementsApi service constructor.
     * @property {module:quantimodoApi/QuantiModoApi/MeasurementsApi}
     */
    MeasurementsApi: MeasurementsApi,
    /**
     * The OrganizationsApi service constructor.
     * @property {module:quantimodoApi/QuantiModoApi/OrganizationsApi}
     */
    OrganizationsApi: OrganizationsApi,
    /**
     * The PairsApi service constructor.
     * @property {module:quantimodoApi/QuantiModoApi/PairsApi}
     */
    PairsApi: PairsApi,
    /**
     * The RemindersApi service constructor.
     * @property {module:quantimodoApi/QuantiModoApi/RemindersApi}
     */
    RemindersApi: RemindersApi,
    /**
     * The TagsApi service constructor.
     * @property {module:quantimodoApi/QuantiModoApi/TagsApi}
     */
    TagsApi: TagsApi,
    /**
     * The UnitsApi service constructor.
     * @property {module:quantimodoApi/QuantiModoApi/UnitsApi}
     */
    UnitsApi: UnitsApi,
    /**
     * The UserApi service constructor.
     * @property {module:quantimodoApi/QuantiModoApi/UserApi}
     */
    UserApi: UserApi,
    /**
     * The VariablesApi service constructor.
     * @property {module:quantimodoApi/QuantiModoApi/VariablesApi}
     */
    VariablesApi: VariablesApi,
    /**
     * The VotesApi service constructor.
     * @property {module:quantimodoApi/QuantiModoApi/VotesApi}
     */
    VotesApi: VotesApi
  };

  return exports;
}));
