/**
 * quantimodo
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do).
 *
 * OpenAPI spec version: 5.8.728
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Highchart', 'model/HighchartArray', 'model/Pair', 'model/ProcessedDailyMeasurement', 'model/Statistic', 'model/UserVariable'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Highchart'), require('./HighchartArray'), require('./Pair'), require('./ProcessedDailyMeasurement'), require('./Statistic'), require('./UserVariable'));
  } else {
    // Browser globals (root is window)
    if (!root.Quantimodo) {
      root.Quantimodo = {};
    }
    root.Quantimodo.Study = factory(root.Quantimodo.ApiClient, root.Quantimodo.Highchart, root.Quantimodo.HighchartArray, root.Quantimodo.Pair, root.Quantimodo.ProcessedDailyMeasurement, root.Quantimodo.Statistic, root.Quantimodo.UserVariable);
  }
}(this, function(ApiClient, Highchart, HighchartArray, Pair, ProcessedDailyMeasurement, Statistic, UserVariable) {
  'use strict';




  /**
   * The Study model module.
   * @module model/Study
   * @version 5.8.810
   */

  /**
   * Constructs a new <code>Study</code>.
   * @alias module:model/Study
   * @class
   * @param causeProcessedDailyMeasurements {Array.<module:model/ProcessedDailyMeasurement>} 
   * @param causeVariable {module:model/UserVariable} 
   * @param effectVariable {module:model/UserVariable} 
   * @param charts {Array.<module:model/Highchart>} 
   * @param effectProcessedDailyMeasurements {Array.<module:model/ProcessedDailyMeasurement>} 
   * @param pairs {Array.<module:model/Pair>} 
   * @param statistics {module:model/Statistic} 
   * @param text {String} Example: 
   * @param user {String} Example: 
   */
  var exports = function(causeProcessedDailyMeasurements, causeVariable, effectVariable, charts, effectProcessedDailyMeasurements, pairs, statistics, text, user) {
    var _this = this;


    _this['causeProcessedDailyMeasurements'] = causeProcessedDailyMeasurements;
    _this['causeVariable'] = causeVariable;
    _this['effectVariable'] = effectVariable;
    _this['charts'] = charts;
    _this['effectProcessedDailyMeasurements'] = effectProcessedDailyMeasurements;
    _this['pairs'] = pairs;
    _this['statistics'] = statistics;
    _this['text'] = text;
    _this['user'] = user;

  };

  /**
   * Constructs a <code>Study</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Study} obj Optional instance to populate.
   * @return {module:model/Study} The populated <code>Study</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('userId')) {
        obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
      }
      if (data.hasOwnProperty('causeProcessedDailyMeasurements')) {
        obj['causeProcessedDailyMeasurements'] = ApiClient.convertToType(data['causeProcessedDailyMeasurements'], [ProcessedDailyMeasurement]);
      }
      if (data.hasOwnProperty('causeVariable')) {
        obj['causeVariable'] = UserVariable.constructFromObject(data['causeVariable']);
      }
      if (data.hasOwnProperty('effectVariable')) {
        obj['effectVariable'] = UserVariable.constructFromObject(data['effectVariable']);
      }
      if (data.hasOwnProperty('charts')) {
        obj['charts'] = ApiClient.convertToType(data['charts'], [Highchart]);
      }
      if (data.hasOwnProperty('effectProcessedDailyMeasurements')) {
        obj['effectProcessedDailyMeasurements'] = ApiClient.convertToType(data['effectProcessedDailyMeasurements'], [ProcessedDailyMeasurement]);
      }
      if (data.hasOwnProperty('pairs')) {
        obj['pairs'] = ApiClient.convertToType(data['pairs'], [Pair]);
      }
      if (data.hasOwnProperty('statistics')) {
        obj['statistics'] = Statistic.constructFromObject(data['statistics']);
      }
      if (data.hasOwnProperty('text')) {
        obj['text'] = ApiClient.convertToType(data['text'], 'String');
      }
      if (data.hasOwnProperty('user')) {
        obj['user'] = ApiClient.convertToType(data['user'], 'String');
      }
      if (data.hasOwnProperty('highchartArray')) {
        obj['highchartArray'] = ApiClient.convertToType(data['highchartArray'], [HighchartArray]);
      }
    }
    return obj;
  }

  /**
   * Example: 230
   * @member {Number} userId
   */
  exports.prototype['userId'] = undefined;
  /**
   * @member {Array.<module:model/ProcessedDailyMeasurement>} causeProcessedDailyMeasurements
   */
  exports.prototype['causeProcessedDailyMeasurements'] = undefined;
  /**
   * @member {module:model/UserVariable} causeVariable
   */
  exports.prototype['causeVariable'] = undefined;
  /**
   * @member {module:model/UserVariable} effectVariable
   */
  exports.prototype['effectVariable'] = undefined;
  /**
   * @member {Array.<module:model/Highchart>} charts
   */
  exports.prototype['charts'] = undefined;
  /**
   * @member {Array.<module:model/ProcessedDailyMeasurement>} effectProcessedDailyMeasurements
   */
  exports.prototype['effectProcessedDailyMeasurements'] = undefined;
  /**
   * @member {Array.<module:model/Pair>} pairs
   */
  exports.prototype['pairs'] = undefined;
  /**
   * @member {module:model/Statistic} statistics
   */
  exports.prototype['statistics'] = undefined;
  /**
   * Example: 
   * @member {String} text
   */
  exports.prototype['text'] = undefined;
  /**
   * Example: 
   * @member {String} user
   */
  exports.prototype['user'] = undefined;
  /**
   * @member {Array.<module:model/HighchartArray>} highchartArray
   */
  exports.prototype['highchartArray'] = undefined;



  return exports;
}));


