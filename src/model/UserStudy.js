/**
 * quantimodo
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do).
 *
 * OpenAPI spec version: 5.8.728
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Chart', 'model/DataSource', 'model/UserVariable'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Chart'), require('./DataSource'), require('./UserVariable'));
  } else {
    // Browser globals (root is window)
    if (!root.Quantimodo) {
      root.Quantimodo = {};
    }
    root.Quantimodo.UserStudy = factory(root.Quantimodo.ApiClient, root.Quantimodo.Chart, root.Quantimodo.DataSource, root.Quantimodo.UserVariable);
  }
}(this, function(ApiClient, Chart, DataSource, UserVariable) {
  'use strict';




  /**
   * The UserStudy model module.
   * @module model/UserStudy
   * @version 5.8.824
   */

  /**
   * Constructs a new <code>UserStudy</code>.
   * @alias module:model/UserStudy
   * @class
   */
  var exports = function() {
    var _this = this;
























































































































  };

  /**
   * Constructs a <code>UserStudy</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserStudy} obj Optional instance to populate.
   * @return {module:model/UserStudy} The populated <code>UserStudy</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('correlationCoefficient')) {
        obj['correlationCoefficient'] = ApiClient.convertToType(data['correlationCoefficient'], 'Number');
      }
      if (data.hasOwnProperty('onsetDelay')) {
        obj['onsetDelay'] = ApiClient.convertToType(data['onsetDelay'], 'Number');
      }
      if (data.hasOwnProperty('durationOfAction')) {
        obj['durationOfAction'] = ApiClient.convertToType(data['durationOfAction'], 'Number');
      }
      if (data.hasOwnProperty('numberOfPairs')) {
        obj['numberOfPairs'] = ApiClient.convertToType(data['numberOfPairs'], 'Number');
      }
      if (data.hasOwnProperty('effectSize')) {
        obj['effectSize'] = ApiClient.convertToType(data['effectSize'], 'String');
      }
      if (data.hasOwnProperty('statisticalSignificance')) {
        obj['statisticalSignificance'] = ApiClient.convertToType(data['statisticalSignificance'], 'Number');
      }
      if (data.hasOwnProperty('timestamp')) {
        obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
      }
      if (data.hasOwnProperty('predictivePearsonCorrelationCoefficient')) {
        obj['predictivePearsonCorrelationCoefficient'] = ApiClient.convertToType(data['predictivePearsonCorrelationCoefficient'], 'Number');
      }
      if (data.hasOwnProperty('causalityFactor')) {
        obj['causalityFactor'] = ApiClient.convertToType(data['causalityFactor'], 'Number');
      }
      if (data.hasOwnProperty('causeVariableCategoryName')) {
        obj['causeVariableCategoryName'] = ApiClient.convertToType(data['causeVariableCategoryName'], 'String');
      }
      if (data.hasOwnProperty('effectVariableCategoryName')) {
        obj['effectVariableCategoryName'] = ApiClient.convertToType(data['effectVariableCategoryName'], 'String');
      }
      if (data.hasOwnProperty('valuePredictingHighOutcome')) {
        obj['valuePredictingHighOutcome'] = ApiClient.convertToType(data['valuePredictingHighOutcome'], 'Number');
      }
      if (data.hasOwnProperty('valuePredictingLowOutcome')) {
        obj['valuePredictingLowOutcome'] = ApiClient.convertToType(data['valuePredictingLowOutcome'], 'Number');
      }
      if (data.hasOwnProperty('optimalPearsonProduct')) {
        obj['optimalPearsonProduct'] = ApiClient.convertToType(data['optimalPearsonProduct'], 'Number');
      }
      if (data.hasOwnProperty('causeVariableDefaultUnitId')) {
        obj['causeVariableDefaultUnitId'] = ApiClient.convertToType(data['causeVariableDefaultUnitId'], 'Number');
      }
      if (data.hasOwnProperty('causeChanges')) {
        obj['causeChanges'] = ApiClient.convertToType(data['causeChanges'], 'Number');
      }
      if (data.hasOwnProperty('effectChanges')) {
        obj['effectChanges'] = ApiClient.convertToType(data['effectChanges'], 'Number');
      }
      if (data.hasOwnProperty('error')) {
        obj['error'] = ApiClient.convertToType(data['error'], 'String');
      }
      if (data.hasOwnProperty('predictsHighEffectChange')) {
        obj['predictsHighEffectChange'] = ApiClient.convertToType(data['predictsHighEffectChange'], 'Number');
      }
      if (data.hasOwnProperty('predictsLowEffectChange')) {
        obj['predictsLowEffectChange'] = ApiClient.convertToType(data['predictsLowEffectChange'], 'Number');
      }
      if (data.hasOwnProperty('tValue')) {
        obj['tValue'] = ApiClient.convertToType(data['tValue'], 'Number');
      }
      if (data.hasOwnProperty('criticalTValue')) {
        obj['criticalTValue'] = ApiClient.convertToType(data['criticalTValue'], 'Number');
      }
      if (data.hasOwnProperty('confidenceInterval')) {
        obj['confidenceInterval'] = ApiClient.convertToType(data['confidenceInterval'], 'Number');
      }
      if (data.hasOwnProperty('experimentStartTime')) {
        obj['experimentStartTime'] = ApiClient.convertToType(data['experimentStartTime'], 'Number');
      }
      if (data.hasOwnProperty('experimentEndTime')) {
        obj['experimentEndTime'] = ApiClient.convertToType(data['experimentEndTime'], 'Number');
      }
      if (data.hasOwnProperty('userId')) {
        obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
      }
      if (data.hasOwnProperty('studyResults')) {
        obj['studyResults'] = ApiClient.convertToType(data['studyResults'], 'String');
      }
      if (data.hasOwnProperty('dataAnalysis')) {
        obj['dataAnalysis'] = ApiClient.convertToType(data['dataAnalysis'], 'String');
      }
      if (data.hasOwnProperty('studyLimitations')) {
        obj['studyLimitations'] = ApiClient.convertToType(data['studyLimitations'], 'String');
      }
      if (data.hasOwnProperty('significantDifference')) {
        obj['significantDifference'] = ApiClient.convertToType(data['significantDifference'], 'Boolean');
      }
      if (data.hasOwnProperty('significanceExplanation')) {
        obj['significanceExplanation'] = ApiClient.convertToType(data['significanceExplanation'], 'String');
      }
      if (data.hasOwnProperty('strengthLevel')) {
        obj['strengthLevel'] = ApiClient.convertToType(data['strengthLevel'], 'String');
      }
      if (data.hasOwnProperty('confidenceLevel')) {
        obj['confidenceLevel'] = ApiClient.convertToType(data['confidenceLevel'], 'String');
      }
      if (data.hasOwnProperty('studyObjective')) {
        obj['studyObjective'] = ApiClient.convertToType(data['studyObjective'], 'String');
      }
      if (data.hasOwnProperty('studyTitle')) {
        obj['studyTitle'] = ApiClient.convertToType(data['studyTitle'], 'String');
      }
      if (data.hasOwnProperty('dataSources')) {
        obj['dataSources'] = ApiClient.convertToType(data['dataSources'], 'String');
      }
      if (data.hasOwnProperty('studyAbstract')) {
        obj['studyAbstract'] = ApiClient.convertToType(data['studyAbstract'], 'String');
      }
      if (data.hasOwnProperty('direction')) {
        obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
      }
      if (data.hasOwnProperty('predictorExplanation')) {
        obj['predictorExplanation'] = ApiClient.convertToType(data['predictorExplanation'], 'String');
      }
      if (data.hasOwnProperty('studyDesign')) {
        obj['studyDesign'] = ApiClient.convertToType(data['studyDesign'], 'String');
      }
      if (data.hasOwnProperty('numberOfDays')) {
        obj['numberOfDays'] = ApiClient.convertToType(data['numberOfDays'], 'Number');
      }
      if (data.hasOwnProperty('causeChangesStatisticalSignificance')) {
        obj['causeChangesStatisticalSignificance'] = ApiClient.convertToType(data['causeChangesStatisticalSignificance'], 'Number');
      }
      if (data.hasOwnProperty('causeVariableCategoryId')) {
        obj['causeVariableCategoryId'] = ApiClient.convertToType(data['causeVariableCategoryId'], 'Number');
      }
      if (data.hasOwnProperty('effectVariableCategoryId')) {
        obj['effectVariableCategoryId'] = ApiClient.convertToType(data['effectVariableCategoryId'], 'Number');
      }
      if (data.hasOwnProperty('causeNumberOfRawMeasurements')) {
        obj['causeNumberOfRawMeasurements'] = ApiClient.convertToType(data['causeNumberOfRawMeasurements'], 'Number');
      }
      if (data.hasOwnProperty('effectNumberOfRawMeasurements')) {
        obj['effectNumberOfRawMeasurements'] = ApiClient.convertToType(data['effectNumberOfRawMeasurements'], 'Number');
      }
      if (data.hasOwnProperty('causeNumberOfProcessedDailyMeasurements')) {
        obj['causeNumberOfProcessedDailyMeasurements'] = ApiClient.convertToType(data['causeNumberOfProcessedDailyMeasurements'], 'Number');
      }
      if (data.hasOwnProperty('effectNumberOfProcessedDailyMeasurements')) {
        obj['effectNumberOfProcessedDailyMeasurements'] = ApiClient.convertToType(data['effectNumberOfProcessedDailyMeasurements'], 'Number');
      }
      if (data.hasOwnProperty('causeVariableMostCommonConnectorId')) {
        obj['causeVariableMostCommonConnectorId'] = ApiClient.convertToType(data['causeVariableMostCommonConnectorId'], 'Number');
      }
      if (data.hasOwnProperty('effectVariableMostCommonConnectorId')) {
        obj['effectVariableMostCommonConnectorId'] = ApiClient.convertToType(data['effectVariableMostCommonConnectorId'], 'Number');
      }
      if (data.hasOwnProperty('studyLinkFacebook')) {
        obj['studyLinkFacebook'] = ApiClient.convertToType(data['studyLinkFacebook'], 'String');
      }
      if (data.hasOwnProperty('studyLinkTwitter')) {
        obj['studyLinkTwitter'] = ApiClient.convertToType(data['studyLinkTwitter'], 'String');
      }
      if (data.hasOwnProperty('studyLinkGoogle')) {
        obj['studyLinkGoogle'] = ApiClient.convertToType(data['studyLinkGoogle'], 'String');
      }
      if (data.hasOwnProperty('causeVariableName')) {
        obj['causeVariableName'] = ApiClient.convertToType(data['causeVariableName'], 'String');
      }
      if (data.hasOwnProperty('effectVariableName')) {
        obj['effectVariableName'] = ApiClient.convertToType(data['effectVariableName'], 'String');
      }
      if (data.hasOwnProperty('averageEffect')) {
        obj['averageEffect'] = ApiClient.convertToType(data['averageEffect'], 'Number');
      }
      if (data.hasOwnProperty('numberOfLowEffectPairs')) {
        obj['numberOfLowEffectPairs'] = ApiClient.convertToType(data['numberOfLowEffectPairs'], 'Number');
      }
      if (data.hasOwnProperty('numberOfHighEffectPairs')) {
        obj['numberOfHighEffectPairs'] = ApiClient.convertToType(data['numberOfHighEffectPairs'], 'Number');
      }
      if (data.hasOwnProperty('degreesOfFreedom')) {
        obj['degreesOfFreedom'] = ApiClient.convertToType(data['degreesOfFreedom'], 'Number');
      }
      if (data.hasOwnProperty('numberOfUniqueCauseValuesForOptimalValues')) {
        obj['numberOfUniqueCauseValuesForOptimalValues'] = ApiClient.convertToType(data['numberOfUniqueCauseValuesForOptimalValues'], 'Number');
      }
      if (data.hasOwnProperty('numberOfUniqueEffectValuesForOptimalValues')) {
        obj['numberOfUniqueEffectValuesForOptimalValues'] = ApiClient.convertToType(data['numberOfUniqueEffectValuesForOptimalValues'], 'Number');
      }
      if (data.hasOwnProperty('numberOfCauseChangesForOptimalValues')) {
        obj['numberOfCauseChangesForOptimalValues'] = ApiClient.convertToType(data['numberOfCauseChangesForOptimalValues'], 'Number');
      }
      if (data.hasOwnProperty('numberOfEffectChangesForOptimalValues')) {
        obj['numberOfEffectChangesForOptimalValues'] = ApiClient.convertToType(data['numberOfEffectChangesForOptimalValues'], 'Number');
      }
      if (data.hasOwnProperty('minimumEffectValue')) {
        obj['minimumEffectValue'] = ApiClient.convertToType(data['minimumEffectValue'], 'Number');
      }
      if (data.hasOwnProperty('maximumEffectValue')) {
        obj['maximumEffectValue'] = ApiClient.convertToType(data['maximumEffectValue'], 'Number');
      }
      if (data.hasOwnProperty('effectValueSpread')) {
        obj['effectValueSpread'] = ApiClient.convertToType(data['effectValueSpread'], 'Number');
      }
      if (data.hasOwnProperty('minimumCauseValue')) {
        obj['minimumCauseValue'] = ApiClient.convertToType(data['minimumCauseValue'], 'Number');
      }
      if (data.hasOwnProperty('maximumCauseValue')) {
        obj['maximumCauseValue'] = ApiClient.convertToType(data['maximumCauseValue'], 'Number');
      }
      if (data.hasOwnProperty('causeValueSpread')) {
        obj['causeValueSpread'] = ApiClient.convertToType(data['causeValueSpread'], 'Number');
      }
      if (data.hasOwnProperty('averageEffectFollowingHighCause')) {
        obj['averageEffectFollowingHighCause'] = ApiClient.convertToType(data['averageEffectFollowingHighCause'], 'Number');
      }
      if (data.hasOwnProperty('averageEffectFollowingLowCause')) {
        obj['averageEffectFollowingLowCause'] = ApiClient.convertToType(data['averageEffectFollowingLowCause'], 'Number');
      }
      if (data.hasOwnProperty('averageDailyLowCause')) {
        obj['averageDailyLowCause'] = ApiClient.convertToType(data['averageDailyLowCause'], 'Number');
      }
      if (data.hasOwnProperty('averageDailyHighCause')) {
        obj['averageDailyHighCause'] = ApiClient.convertToType(data['averageDailyHighCause'], 'Number');
      }
      if (data.hasOwnProperty('valuePredictingHighOutcomeExplanation')) {
        obj['valuePredictingHighOutcomeExplanation'] = ApiClient.convertToType(data['valuePredictingHighOutcomeExplanation'], 'String');
      }
      if (data.hasOwnProperty('averageEffectFollowingHighCauseExplanation')) {
        obj['averageEffectFollowingHighCauseExplanation'] = ApiClient.convertToType(data['averageEffectFollowingHighCauseExplanation'], 'String');
      }
      if (data.hasOwnProperty('averageEffectFollowingLowCauseExplanation')) {
        obj['averageEffectFollowingLowCauseExplanation'] = ApiClient.convertToType(data['averageEffectFollowingLowCauseExplanation'], 'String');
      }
      if (data.hasOwnProperty('valuePredictingLowOutcomeExplanation')) {
        obj['valuePredictingLowOutcomeExplanation'] = ApiClient.convertToType(data['valuePredictingLowOutcomeExplanation'], 'String');
      }
      if (data.hasOwnProperty('correlationIsContradictoryToOptimalValues')) {
        obj['correlationIsContradictoryToOptimalValues'] = ApiClient.convertToType(data['correlationIsContradictoryToOptimalValues'], 'Boolean');
      }
      if (data.hasOwnProperty('forwardSpearmanCorrelationCoefficient')) {
        obj['forwardSpearmanCorrelationCoefficient'] = ApiClient.convertToType(data['forwardSpearmanCorrelationCoefficient'], 'Number');
      }
      if (data.hasOwnProperty('minimumProbability')) {
        obj['minimumProbability'] = ApiClient.convertToType(data['minimumProbability'], 'Number');
      }
      if (data.hasOwnProperty('voteStatisticalSignificance')) {
        obj['voteStatisticalSignificance'] = ApiClient.convertToType(data['voteStatisticalSignificance'], 'Number');
      }
      if (data.hasOwnProperty('shareUserMeasurements')) {
        obj['shareUserMeasurements'] = ApiClient.convertToType(data['shareUserMeasurements'], 'Boolean');
      }
      if (data.hasOwnProperty('causeVariable')) {
        obj['causeVariable'] = UserVariable.constructFromObject(data['causeVariable']);
      }
      if (data.hasOwnProperty('effectVariable')) {
        obj['effectVariable'] = UserVariable.constructFromObject(data['effectVariable']);
      }
      if (data.hasOwnProperty('causeVariableId')) {
        obj['causeVariableId'] = ApiClient.convertToType(data['causeVariableId'], 'Number');
      }
      if (data.hasOwnProperty('effectVariableId')) {
        obj['effectVariableId'] = ApiClient.convertToType(data['effectVariableId'], 'Number');
      }
      if (data.hasOwnProperty('studyLinkStatic')) {
        obj['studyLinkStatic'] = ApiClient.convertToType(data['studyLinkStatic'], 'String');
      }
      if (data.hasOwnProperty('studyLinkDynamic')) {
        obj['studyLinkDynamic'] = ApiClient.convertToType(data['studyLinkDynamic'], 'String');
      }
      if (data.hasOwnProperty('gaugeImage')) {
        obj['gaugeImage'] = ApiClient.convertToType(data['gaugeImage'], 'String');
      }
      if (data.hasOwnProperty('imageUrl')) {
        obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
      }
      if (data.hasOwnProperty('gaugeImageSquare')) {
        obj['gaugeImageSquare'] = ApiClient.convertToType(data['gaugeImageSquare'], 'String');
      }
      if (data.hasOwnProperty('onsetDelayInHours')) {
        obj['onsetDelayInHours'] = ApiClient.convertToType(data['onsetDelayInHours'], 'Number');
      }
      if (data.hasOwnProperty('durationOfActionInHours')) {
        obj['durationOfActionInHours'] = ApiClient.convertToType(data['durationOfActionInHours'], 'Number');
      }
      if (data.hasOwnProperty('effectVariableDefaultUnitId')) {
        obj['effectVariableDefaultUnitId'] = ApiClient.convertToType(data['effectVariableDefaultUnitId'], 'Number');
      }
      if (data.hasOwnProperty('causeVariableDefaultUnitAbbreviatedName')) {
        obj['causeVariableDefaultUnitAbbreviatedName'] = ApiClient.convertToType(data['causeVariableDefaultUnitAbbreviatedName'], 'String');
      }
      if (data.hasOwnProperty('effectVariableDefaultUnitAbbreviatedName')) {
        obj['effectVariableDefaultUnitAbbreviatedName'] = ApiClient.convertToType(data['effectVariableDefaultUnitAbbreviatedName'], 'String');
      }
      if (data.hasOwnProperty('rawCauseMeasurementSignificance')) {
        obj['rawCauseMeasurementSignificance'] = ApiClient.convertToType(data['rawCauseMeasurementSignificance'], 'Number');
      }
      if (data.hasOwnProperty('allPairsSignificance')) {
        obj['allPairsSignificance'] = ApiClient.convertToType(data['allPairsSignificance'], 'Number');
      }
      if (data.hasOwnProperty('numberOfDaysSignificance')) {
        obj['numberOfDaysSignificance'] = ApiClient.convertToType(data['numberOfDaysSignificance'], 'Number');
      }
      if (data.hasOwnProperty('rawEffectMeasurementSignificance')) {
        obj['rawEffectMeasurementSignificance'] = ApiClient.convertToType(data['rawEffectMeasurementSignificance'], 'Number');
      }
      if (data.hasOwnProperty('optimalChangeSpread')) {
        obj['optimalChangeSpread'] = ApiClient.convertToType(data['optimalChangeSpread'], 'Number');
      }
      if (data.hasOwnProperty('optimalChangeSpreadSignificance')) {
        obj['optimalChangeSpreadSignificance'] = ApiClient.convertToType(data['optimalChangeSpreadSignificance'], 'Number');
      }
      if (data.hasOwnProperty('dataSourcesParagraphForEffect')) {
        obj['dataSourcesParagraphForEffect'] = ApiClient.convertToType(data['dataSourcesParagraphForEffect'], 'String');
      }
      if (data.hasOwnProperty('dataSourcesParagraphForCause')) {
        obj['dataSourcesParagraphForCause'] = ApiClient.convertToType(data['dataSourcesParagraphForCause'], 'String');
      }
      if (data.hasOwnProperty('instructionsForEffect')) {
        obj['instructionsForEffect'] = ApiClient.convertToType(data['instructionsForEffect'], 'String');
      }
      if (data.hasOwnProperty('instructionsForCause')) {
        obj['instructionsForCause'] = ApiClient.convertToType(data['instructionsForCause'], 'String');
      }
      if (data.hasOwnProperty('predictsLowEffectChangeSentenceFragment')) {
        obj['predictsLowEffectChangeSentenceFragment'] = ApiClient.convertToType(data['predictsLowEffectChangeSentenceFragment'], 'String');
      }
      if (data.hasOwnProperty('predictsHighEffectChangeSentenceFragment')) {
        obj['predictsHighEffectChangeSentenceFragment'] = ApiClient.convertToType(data['predictsHighEffectChangeSentenceFragment'], 'String');
      }
      if (data.hasOwnProperty('effectDataSource')) {
        obj['effectDataSource'] = DataSource.constructFromObject(data['effectDataSource']);
      }
      if (data.hasOwnProperty('causeDataSource')) {
        obj['causeDataSource'] = DataSource.constructFromObject(data['causeDataSource']);
      }
      if (data.hasOwnProperty('studyLinkEmail')) {
        obj['studyLinkEmail'] = ApiClient.convertToType(data['studyLinkEmail'], 'String');
      }
      if (data.hasOwnProperty('distanceFromMiddleToBeHightLowEffect')) {
        obj['distanceFromMiddleToBeHightLowEffect'] = ApiClient.convertToType(data['distanceFromMiddleToBeHightLowEffect'], 'Number');
      }
      if (data.hasOwnProperty('numberOfSamples')) {
        obj['numberOfSamples'] = ApiClient.convertToType(data['numberOfSamples'], 'Number');
      }
      if (data.hasOwnProperty('charts')) {
        obj['charts'] = ApiClient.convertToType(data['charts'], [Chart]);
      }
      if (data.hasOwnProperty('effectUnit')) {
        obj['effectUnit'] = ApiClient.convertToType(data['effectUnit'], 'String');
      }
      if (data.hasOwnProperty('causeVariableImageUrl')) {
        obj['causeVariableImageUrl'] = ApiClient.convertToType(data['causeVariableImageUrl'], 'String');
      }
      if (data.hasOwnProperty('causeVariableIonIcon')) {
        obj['causeVariableIonIcon'] = ApiClient.convertToType(data['causeVariableIonIcon'], 'String');
      }
      if (data.hasOwnProperty('effectVariableImageUrl')) {
        obj['effectVariableImageUrl'] = ApiClient.convertToType(data['effectVariableImageUrl'], 'String');
      }
      if (data.hasOwnProperty('effectVariableIonIcon')) {
        obj['effectVariableIonIcon'] = ApiClient.convertToType(data['effectVariableIonIcon'], 'String');
      }
    }
    return obj;
  }

  /**
   * Example: -0.173
   * @member {Number} correlationCoefficient
   */
  exports.prototype['correlationCoefficient'] = undefined;
  /**
   * Example: 0
   * @member {Number} onsetDelay
   */
  exports.prototype['onsetDelay'] = undefined;
  /**
   * Example: 604800
   * @member {Number} durationOfAction
   */
  exports.prototype['durationOfAction'] = undefined;
  /**
   * Example: 1011
   * @member {Number} numberOfPairs
   */
  exports.prototype['numberOfPairs'] = undefined;
  /**
   * Example: weakly negative
   * @member {String} effectSize
   */
  exports.prototype['effectSize'] = undefined;
  /**
   * Example: 0.83333333333333
   * @member {Number} statisticalSignificance
   */
  exports.prototype['statisticalSignificance'] = undefined;
  /**
   * Example: 1502255174
   * @member {Number} timestamp
   */
  exports.prototype['timestamp'] = undefined;
  /**
   * Example: -0.173
   * @member {Number} predictivePearsonCorrelationCoefficient
   */
  exports.prototype['predictivePearsonCorrelationCoefficient'] = undefined;
  /**
   * Example: -0.173
   * @member {Number} causalityFactor
   */
  exports.prototype['causalityFactor'] = undefined;
  /**
   * Example: Sleep
   * @member {String} causeVariableCategoryName
   */
  exports.prototype['causeVariableCategoryName'] = undefined;
  /**
   * Example: Emotions
   * @member {String} effectVariableCategoryName
   */
  exports.prototype['effectVariableCategoryName'] = undefined;
  /**
   * Example: 6.79
   * @member {Number} valuePredictingHighOutcome
   */
  exports.prototype['valuePredictingHighOutcome'] = undefined;
  /**
   * Example: 7.54
   * @member {Number} valuePredictingLowOutcome
   */
  exports.prototype['valuePredictingLowOutcome'] = undefined;
  /**
   * Example: 0.074088026546601
   * @member {Number} optimalPearsonProduct
   */
  exports.prototype['optimalPearsonProduct'] = undefined;
  /**
   * Example: 34
   * @member {Number} causeVariableDefaultUnitId
   */
  exports.prototype['causeVariableDefaultUnitId'] = undefined;
  /**
   * Example: 1010
   * @member {Number} causeChanges
   */
  exports.prototype['causeChanges'] = undefined;
  /**
   * Example: 521
   * @member {Number} effectChanges
   */
  exports.prototype['effectChanges'] = undefined;
  /**
   * Example: optimalPearsonProduct is not defined
   * @member {String} error
   */
  exports.prototype['error'] = undefined;
  /**
   * Example: 3.54
   * @member {Number} predictsHighEffectChange
   */
  exports.prototype['predictsHighEffectChange'] = undefined;
  /**
   * Example: -3.25
   * @member {Number} predictsLowEffectChange
   */
  exports.prototype['predictsLowEffectChange'] = undefined;
  /**
   * Example: 5.525102310162
   * @member {Number} tValue
   */
  exports.prototype['tValue'] = undefined;
  /**
   * Example: 1.646
   * @member {Number} criticalTValue
   */
  exports.prototype['criticalTValue'] = undefined;
  /**
   * Example: 0.055165978848875
   * @member {Number} confidenceInterval
   */
  exports.prototype['confidenceInterval'] = undefined;
  /**
   * Example: 1336267020
   * @member {Number} experimentStartTime
   */
  exports.prototype['experimentStartTime'] = undefined;
  /**
   * Example: 1491024591
   * @member {Number} experimentEndTime
   */
  exports.prototype['experimentEndTime'] = undefined;
  /**
   * Example: 230
   * @member {Number} userId
   */
  exports.prototype['userId'] = undefined;
  /**
   * Example: This analysis suggests that higher Sleep Duration (Sleep) generally predicts lower Overall Mood (p = 0).  Overall Mood is, on average, 3.54%  higher after around 6.79 Sleep Duration.  After an onset delay of 168 hours, Overall Mood is, on average, 3.25%  lower than its average over the 168 hours following around 7.54 Sleep Duration.  1011 data points were used in this analysis.  The value for Sleep Duration changed 1010 times, effectively running 505 separate natural experiments.  The top quartile outcome values are preceded by an average 6.79 h of Sleep Duration.  The bottom quartile outcome values are preceded by an average 7.54 h of Sleep Duration.  Forward Pearson Correlation Coefficient was -0.173 (p=0, 95% CI -0.228 to -0.118 onset delay = 0 hours, duration of action = 168 hours) .  The Reverse Pearson Correlation Coefficient was 0 (P=0, 95% CI -0.055 to 0.055, onset delay = -0 hours, duration of action = -168 hours). When the Sleep Duration value is closer to 6.79 h than 7.54 h, the Overall Mood value which follows is, on average, 3.54%  percent higher than its typical value.  When the Sleep Duration value is closer to 7.54 h than 6.79 h, the Overall Mood value which follows is 0% lower than its typical value.  Overall Mood is 2.62/5 (4% lower) on average after days with around 8.8 h Sleep Duration  Overall Mood is 2.82/5 (3% higher) on average after days with around 5.93 h Sleep Duration
   * @member {String} studyResults
   */
  exports.prototype['studyResults'] = undefined;
  /**
   * Example: It was assumed that 0 hours would pass before a change in Sleep Duration would produce an observable change in Overall Mood.  It was assumed that Sleep Duration could produce an observable change in Overall Mood for as much as 7 days after the stimulus event.  
   * @member {String} dataAnalysis
   */
  exports.prototype['dataAnalysis'] = undefined;
  /**
   * Example: As with any human experiment, it was impossible to control for all potentially confounding variables.                           Correlation does not necessarily imply correlation.  We can never know for sure if one factor is definitely the cause of an outcome.               However, lack of correlation definitely implies the lack of a causal relationship.  Hence, we can with great              confidence rule out non-existent relationships. For instance, if we discover no relationship between mood             and an antidepressant this information is just as or even more valuable than the discovery that there is a relationship.              <br>             <br>                         We can also take advantage of several characteristics of time series data from many subjects  to infer the likelihood of a causal relationship if we do find a correlational relationship.              The criteria for causation are a group of minimal conditions necessary to provide adequate evidence of a causal relationship between an incidence and a possible consequence.             The list of the criteria is as follows:             <br>             1. Strength (effect size): A small association does not mean that there is not a causal effect, though the larger the association, the more likely that it is causal.             <br>             2. Consistency (reproducibility): Consistent findings observed by different persons in different places with different samples strengthens the likelihood of an effect.             <br>             3. Specificity: Causation is likely if a very specific population at a specific site and disease with no other likely explanation. The more specific an association between a factor and an effect is, the bigger the probability of a causal relationship.             <br>             4. Temporality: The effect has to occur after the cause (and if there is an expected delay between the cause and expected effect, then the effect must occur after that delay).             <br>             5. Biological gradient: Greater exposure should generally lead to greater incidence of the effect. However, in some cases, the mere presence of the factor can trigger the effect. In other cases, an inverse proportion is observed: greater exposure leads to lower incidence.             <br>             6. Plausibility: A plausible mechanism between cause and effect is helpful.             <br>             7. Coherence: Coherence between epidemiological and laboratory findings increases the likelihood of an effect.             <br>             8. Experiment: \"Occasionally it is possible to appeal to experimental evidence\".             <br>             9. Analogy: The effect of similar factors may be considered.             <br>             <br>                            The confidence in a causal relationship is bolstered by the fact that time-precedence was taken into account in all calculations. Furthermore, in accordance with the law of large numbers (LLN), the predictive power and accuracy of these results will continually grow over time.  1011 paired data points were used in this analysis.   Assuming that the relationship is merely coincidental, as the participant independently modifies their Sleep Duration values, the observed strength of the relationship will decline until it is below the threshold of significance.  To it another way, in the case that we do find a spurious correlation, suggesting that banana intake improves mood for instance,             one will likely increase their banana intake.  Due to the fact that this correlation is spurious, it is unlikely             that you will see a continued and persistent corresponding increase in mood.  So over time, the spurious correlation will             naturally dissipate.Furthermore, it will be very enlightening to aggregate this data with the data from other participants  with similar genetic, diseasomic, environmentomic, and demographic profiles.
   * @member {String} studyLimitations
   */
  exports.prototype['studyLimitations'] = undefined;
  /**
   * Example: true
   * @member {Boolean} significantDifference
   */
  exports.prototype['significantDifference'] = undefined;
  /**
   * Example: Using a two-tailed t-test with alpha = 0.05, it was determined that the change in Overall Mood is statistically significant at 95% confidence interval. 
   * @member {String} significanceExplanation
   */
  exports.prototype['significanceExplanation'] = undefined;
  /**
   * Example: very weak
   * @member {String} strengthLevel
   */
  exports.prototype['strengthLevel'] = undefined;
  /**
   * Example: high
   * @member {String} confidenceLevel
   */
  exports.prototype['confidenceLevel'] = undefined;
  /**
   * Example: The objective of this study is to determine the nature of the relationship (if any) between the Sleep Duration and the Overall Mood. Additionally, we attempt to determine the Sleep Duration values most likely to produce optimal Overall Mood values. 
   * @member {String} studyObjective
   */
  exports.prototype['studyObjective'] = undefined;
  /**
   * Example: N1 Study: Sleep Duration Predicts Lower Overall Mood
   * @member {String} studyTitle
   */
  exports.prototype['studyTitle'] = undefined;
  /**
   * Example: Sleep Duration data was primarily collected using <a href=\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\">Fitbit</a>.  <a href=\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\">Fitbit</a> makes activity tracking easy and automatic.<br>Overall Mood data was primarily collected using <a href=\"https://quantimo.do\">QuantiModo</a>.  <a href=\"https://quantimo.do\">QuantiModo</a> is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  <a href=\"https://quantimo.do\">QuantiModo</a> then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.
   * @member {String} dataSources
   */
  exports.prototype['dataSources'] = undefined;
  /**
   * Example: Your data suggests with a high degree of confidence (p=0) that Sleep Duration (Sleep) has a weakly negative predictive relationship (R=-0.173) with Overall Mood  (Emotions).  The highest quartile of Overall Mood  measurements were observed following an average 6.79h Sleep Duration.  The lowest quartile of Overall Mood  measurements were observed following an average 7.54h Sleep Duration.
   * @member {String} studyAbstract
   */
  exports.prototype['studyAbstract'] = undefined;
  /**
   * Example: lower
   * @member {String} direction
   */
  exports.prototype['direction'] = undefined;
  /**
   * Example: Sleep Duration Predicts Lower Overall Mood
   * @member {String} predictorExplanation
   */
  exports.prototype['predictorExplanation'] = undefined;
  /**
   * Example: This study is based on data donated by one QuantiModo user. Thus, the study design is consistent with an n=1 observational natural experiment. 
   * @member {String} studyDesign
   */
  exports.prototype['studyDesign'] = undefined;
  /**
   * Example: 1791
   * @member {Number} numberOfDays
   */
  exports.prototype['numberOfDays'] = undefined;
  /**
   * Example: 1
   * @member {Number} causeChangesStatisticalSignificance
   */
  exports.prototype['causeChangesStatisticalSignificance'] = undefined;
  /**
   * Example: 6
   * @member {Number} causeVariableCategoryId
   */
  exports.prototype['causeVariableCategoryId'] = undefined;
  /**
   * Example: 1
   * @member {Number} effectVariableCategoryId
   */
  exports.prototype['effectVariableCategoryId'] = undefined;
  /**
   * Example: 1942
   * @member {Number} causeNumberOfRawMeasurements
   */
  exports.prototype['causeNumberOfRawMeasurements'] = undefined;
  /**
   * Example: 11866
   * @member {Number} effectNumberOfRawMeasurements
   */
  exports.prototype['effectNumberOfRawMeasurements'] = undefined;
  /**
   * Example: 1113
   * @member {Number} causeNumberOfProcessedDailyMeasurements
   */
  exports.prototype['causeNumberOfProcessedDailyMeasurements'] = undefined;
  /**
   * Example: 1492
   * @member {Number} effectNumberOfProcessedDailyMeasurements
   */
  exports.prototype['effectNumberOfProcessedDailyMeasurements'] = undefined;
  /**
   * Example: 7
   * @member {Number} causeVariableMostCommonConnectorId
   */
  exports.prototype['causeVariableMostCommonConnectorId'] = undefined;
  /**
   * Example: 5
   * @member {Number} effectVariableMostCommonConnectorId
   */
  exports.prototype['effectVariableMostCommonConnectorId'] = undefined;
  /**
   * Example: https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Duration%26effectVariableName%3DOverall%2520Mood%26userId%3D230
   * @member {String} studyLinkFacebook
   */
  exports.prototype['studyLinkFacebook'] = undefined;
  /**
   * Example: https://twitter.com/home?status=Sleep%20Duration%20Predicts%20Lower%20Overall%20Mood%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Duration%26effectVariableName%3DOverall%2520Mood%26userId%3D230%20%40quantimodo
   * @member {String} studyLinkTwitter
   */
  exports.prototype['studyLinkTwitter'] = undefined;
  /**
   * Example: https://plus.google.com/share?url=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Duration%26effectVariableName%3DOverall%2520Mood%26userId%3D230
   * @member {String} studyLinkGoogle
   */
  exports.prototype['studyLinkGoogle'] = undefined;
  /**
   * Example: Sleep Duration
   * @member {String} causeVariableName
   */
  exports.prototype['causeVariableName'] = undefined;
  /**
   * Example: Overall Mood
   * @member {String} effectVariableName
   */
  exports.prototype['effectVariableName'] = undefined;
  /**
   * Example: 2.7265782739077
   * @member {Number} averageEffect
   */
  exports.prototype['averageEffect'] = undefined;
  /**
   * Example: 275
   * @member {Number} numberOfLowEffectPairs
   */
  exports.prototype['numberOfLowEffectPairs'] = undefined;
  /**
   * Example: 28
   * @member {Number} numberOfHighEffectPairs
   */
  exports.prototype['numberOfHighEffectPairs'] = undefined;
  /**
   * Example: 200
   * @member {Number} degreesOfFreedom
   */
  exports.prototype['degreesOfFreedom'] = undefined;
  /**
   * Example: 671
   * @member {Number} numberOfUniqueCauseValuesForOptimalValues
   */
  exports.prototype['numberOfUniqueCauseValuesForOptimalValues'] = undefined;
  /**
   * Example: 112
   * @member {Number} numberOfUniqueEffectValuesForOptimalValues
   */
  exports.prototype['numberOfUniqueEffectValuesForOptimalValues'] = undefined;
  /**
   * Example: 1010
   * @member {Number} numberOfCauseChangesForOptimalValues
   */
  exports.prototype['numberOfCauseChangesForOptimalValues'] = undefined;
  /**
   * Example: 521
   * @member {Number} numberOfEffectChangesForOptimalValues
   */
  exports.prototype['numberOfEffectChangesForOptimalValues'] = undefined;
  /**
   * Example: 1.5
   * @member {Number} minimumEffectValue
   */
  exports.prototype['minimumEffectValue'] = undefined;
  /**
   * Example: 5
   * @member {Number} maximumEffectValue
   */
  exports.prototype['maximumEffectValue'] = undefined;
  /**
   * Example: 3.5
   * @member {Number} effectValueSpread
   */
  exports.prototype['effectValueSpread'] = undefined;
  /**
   * Example: 1.3
   * @member {Number} minimumCauseValue
   */
  exports.prototype['minimumCauseValue'] = undefined;
  /**
   * Example: 13.75
   * @member {Number} maximumCauseValue
   */
  exports.prototype['maximumCauseValue'] = undefined;
  /**
   * Example: 12.45
   * @member {Number} causeValueSpread
   */
  exports.prototype['causeValueSpread'] = undefined;
  /**
   * Example: 2.62
   * @member {Number} averageEffectFollowingHighCause
   */
  exports.prototype['averageEffectFollowingHighCause'] = undefined;
  /**
   * Example: 2.82
   * @member {Number} averageEffectFollowingLowCause
   */
  exports.prototype['averageEffectFollowingLowCause'] = undefined;
  /**
   * Example: 5.93
   * @member {Number} averageDailyLowCause
   */
  exports.prototype['averageDailyLowCause'] = undefined;
  /**
   * Example: 8.8
   * @member {Number} averageDailyHighCause
   */
  exports.prototype['averageDailyHighCause'] = undefined;
  /**
   * Example: Overall Mood, on average, 3.54% higher after around 6.79 h Sleep Duration 
   * @member {String} valuePredictingHighOutcomeExplanation
   */
  exports.prototype['valuePredictingHighOutcomeExplanation'] = undefined;
  /**
   * Example: Overall Mood is 2.62/5 (4% lower) on average after days with around 8.8 h Sleep Duration
   * @member {String} averageEffectFollowingHighCauseExplanation
   */
  exports.prototype['averageEffectFollowingHighCauseExplanation'] = undefined;
  /**
   * Example: Overall Mood is 2.82/5 (3% higher) on average after days with around 5.93 h Sleep Duration
   * @member {String} averageEffectFollowingLowCauseExplanation
   */
  exports.prototype['averageEffectFollowingLowCauseExplanation'] = undefined;
  /**
   * Example: Overall Mood, on average, 3.25% lower after around 7.54 h Sleep Duration 
   * @member {String} valuePredictingLowOutcomeExplanation
   */
  exports.prototype['valuePredictingLowOutcomeExplanation'] = undefined;
  /**
   * Example: false
   * @member {Boolean} correlationIsContradictoryToOptimalValues
   */
  exports.prototype['correlationIsContradictoryToOptimalValues'] = undefined;
  /**
   * Example: -0.20037947834262
   * @member {Number} forwardSpearmanCorrelationCoefficient
   */
  exports.prototype['forwardSpearmanCorrelationCoefficient'] = undefined;
  /**
   * Example: 0.05
   * @member {Number} minimumProbability
   */
  exports.prototype['minimumProbability'] = undefined;
  /**
   * Example: 0.83333333333333
   * @member {Number} voteStatisticalSignificance
   */
  exports.prototype['voteStatisticalSignificance'] = undefined;
  /**
   * Example: false
   * @member {Boolean} shareUserMeasurements
   */
  exports.prototype['shareUserMeasurements'] = undefined;
  /**
   * @member {module:model/UserVariable} causeVariable
   */
  exports.prototype['causeVariable'] = undefined;
  /**
   * @member {module:model/UserVariable} effectVariable
   */
  exports.prototype['effectVariable'] = undefined;
  /**
   * Example: 1867
   * @member {Number} causeVariableId
   */
  exports.prototype['causeVariableId'] = undefined;
  /**
   * Example: 1398
   * @member {Number} effectVariableId
   */
  exports.prototype['effectVariableId'] = undefined;
  /**
   * Example: https://local.quantimo.do/api/v2/study?causeVariableName=Sleep%20Duration&effectVariableName=Overall%20Mood&userId=230
   * @member {String} studyLinkStatic
   */
  exports.prototype['studyLinkStatic'] = undefined;
  /**
   * Example: https://local.quantimo.do/ionic/Modo/www/index.html#/app/study?causeVariableName=Sleep%20Duration&effectVariableName=Overall%20Mood&userId=230
   * @member {String} studyLinkDynamic
   */
  exports.prototype['studyLinkDynamic'] = undefined;
  /**
   * Example: https://s3.amazonaws.com/quantimodo-docs/images/gauge-weakly-negative-relationship.png
   * @member {String} gaugeImage
   */
  exports.prototype['gaugeImage'] = undefined;
  /**
   * Example: https://s3-us-west-1.amazonaws.com/qmimages/variable_categories_gauges_logo_background/gauge-weakly-negative-relationship_sleep_emotions_logo_background.png
   * @member {String} imageUrl
   */
  exports.prototype['imageUrl'] = undefined;
  /**
   * Example: https://s3.amazonaws.com/quantimodo-docs/images/gauge-weakly-negative-relationship-200-200.png
   * @member {String} gaugeImageSquare
   */
  exports.prototype['gaugeImageSquare'] = undefined;
  /**
   * Example: 0
   * @member {Number} onsetDelayInHours
   */
  exports.prototype['onsetDelayInHours'] = undefined;
  /**
   * Example: 0
   * @member {Number} durationOfActionInHours
   */
  exports.prototype['durationOfActionInHours'] = undefined;
  /**
   * Example: 10
   * @member {Number} effectVariableDefaultUnitId
   */
  exports.prototype['effectVariableDefaultUnitId'] = undefined;
  /**
   * Example: h
   * @member {String} causeVariableDefaultUnitAbbreviatedName
   */
  exports.prototype['causeVariableDefaultUnitAbbreviatedName'] = undefined;
  /**
   * Example: /5
   * @member {String} effectVariableDefaultUnitAbbreviatedName
   */
  exports.prototype['effectVariableDefaultUnitAbbreviatedName'] = undefined;
  /**
   * Example: 1
   * @member {Number} rawCauseMeasurementSignificance
   */
  exports.prototype['rawCauseMeasurementSignificance'] = undefined;
  /**
   * Example: 1
   * @member {Number} allPairsSignificance
   */
  exports.prototype['allPairsSignificance'] = undefined;
  /**
   * Example: 1
   * @member {Number} numberOfDaysSignificance
   */
  exports.prototype['numberOfDaysSignificance'] = undefined;
  /**
   * Example: 1
   * @member {Number} rawEffectMeasurementSignificance
   */
  exports.prototype['rawEffectMeasurementSignificance'] = undefined;
  /**
   * Example: 6.79
   * @member {Number} optimalChangeSpread
   */
  exports.prototype['optimalChangeSpread'] = undefined;
  /**
   * Example: 0.8959967711131
   * @member {Number} optimalChangeSpreadSignificance
   */
  exports.prototype['optimalChangeSpreadSignificance'] = undefined;
  /**
   * Example: Overall Mood data was primarily collected using <a href=\"https://quantimo.do\">QuantiModo</a>.  <a href=\"https://quantimo.do\">QuantiModo</a> is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  <a href=\"https://quantimo.do\">QuantiModo</a> then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.
   * @member {String} dataSourcesParagraphForEffect
   */
  exports.prototype['dataSourcesParagraphForEffect'] = undefined;
  /**
   * Example: Sleep Duration data was primarily collected using <a href=\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\">Fitbit</a>.  <a href=\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\">Fitbit</a> makes activity tracking easy and automatic.
   * @member {String} dataSourcesParagraphForCause
   */
  exports.prototype['dataSourcesParagraphForCause'] = undefined;
  /**
   * Example: <a href=\"https://quantimo.do\">Obtain QuantiModo</a> and use it to record your Overall Mood. Once you have a <a href=\"https://quantimo.do\">QuantiModo</a> account, <a href=\"https://app.quantimo.do/ionic/Modo/www/#/app/import\">connect your  QuantiModo account at QuantiModo</a> to automatically import and analyze your data.
   * @member {String} instructionsForEffect
   */
  exports.prototype['instructionsForEffect'] = undefined;
  /**
   * Example: <a href=\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\">Obtain Fitbit</a> and use it to record your Sleep Duration. Once you have a <a href=\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\">Fitbit</a> account, <a href=\"https://app.quantimo.do/ionic/Modo/www/#/app/import\">connect your  Fitbit account at QuantiModo</a> to automatically import and analyze your data.
   * @member {String} instructionsForCause
   */
  exports.prototype['instructionsForCause'] = undefined;
  /**
   * Example: , on average, 3.25% 
   * @member {String} predictsLowEffectChangeSentenceFragment
   */
  exports.prototype['predictsLowEffectChangeSentenceFragment'] = undefined;
  /**
   * Example: , on average, 3.54% 
   * @member {String} predictsHighEffectChangeSentenceFragment
   */
  exports.prototype['predictsHighEffectChangeSentenceFragment'] = undefined;
  /**
   * @member {module:model/DataSource} effectDataSource
   */
  exports.prototype['effectDataSource'] = undefined;
  /**
   * @member {module:model/DataSource} causeDataSource
   */
  exports.prototype['causeDataSource'] = undefined;
  /**
   * Example: mailto:?subject=N1%20Study%3A%20Sleep%20Duration%20Predicts%20Lower%20Overall%20Mood&body=Check%20out%20my%20study%20at%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Duration%26effectVariableName%3DOverall%2520Mood%26userId%3D230%0A%0AHave%20a%20great%20day!
   * @member {String} studyLinkEmail
   */
  exports.prototype['studyLinkEmail'] = undefined;
  /**
   * Example: 25
   * @member {Number} distanceFromMiddleToBeHightLowEffect
   */
  exports.prototype['distanceFromMiddleToBeHightLowEffect'] = undefined;
  /**
   * Example: 1011
   * @member {Number} numberOfSamples
   */
  exports.prototype['numberOfSamples'] = undefined;
  /**
   * @member {Array.<module:model/Chart>} charts
   */
  exports.prototype['charts'] = undefined;
  /**
   * Example: /5
   * @member {String} effectUnit
   */
  exports.prototype['effectUnit'] = undefined;
  /**
   * Example: https://maxcdn.icons8.com/Color/PNG/96/Household/sleeping_in_bed-96.png
   * @member {String} causeVariableImageUrl
   */
  exports.prototype['causeVariableImageUrl'] = undefined;
  /**
   * Example: ion-ios-cloudy-night-outline
   * @member {String} causeVariableIonIcon
   */
  exports.prototype['causeVariableIonIcon'] = undefined;
  /**
   * Example: https://maxcdn.icons8.com/Color/PNG/96/Cinema/theatre_mask-96.png
   * @member {String} effectVariableImageUrl
   */
  exports.prototype['effectVariableImageUrl'] = undefined;
  /**
   * Example: ion-happy-outline
   * @member {String} effectVariableIonIcon
   */
  exports.prototype['effectVariableIonIcon'] = undefined;



  return exports;
}));


