/**
 * quantimodo
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do).
 *
 * OpenAPI spec version: 5.8.728
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Chart', 'model/Correlation', 'model/GetStudyDataResponse', 'model/Highchart', 'model/HighchartArray', 'model/Pair', 'model/PairsOfAveragesForAllUser', 'model/ParticipantInstruction', 'model/ProcessedDailyMeasurement', 'model/Statistic', 'model/Text', 'model/UserStudy', 'model/UserVariable'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Chart'), require('./Correlation'), require('./GetStudyDataResponse'), require('./Highchart'), require('./HighchartArray'), require('./Pair'), require('./PairsOfAveragesForAllUser'), require('./ParticipantInstruction'), require('./ProcessedDailyMeasurement'), require('./Statistic'), require('./Text'), require('./UserStudy'), require('./UserVariable'));
  } else {
    // Browser globals (root is window)
    if (!root.Quantimodo) {
      root.Quantimodo = {};
    }
    root.Quantimodo.GetStudyResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.Chart, root.Quantimodo.Correlation, root.Quantimodo.GetStudyDataResponse, root.Quantimodo.Highchart, root.Quantimodo.HighchartArray, root.Quantimodo.Pair, root.Quantimodo.PairsOfAveragesForAllUser, root.Quantimodo.ParticipantInstruction, root.Quantimodo.ProcessedDailyMeasurement, root.Quantimodo.Statistic, root.Quantimodo.Text, root.Quantimodo.UserStudy, root.Quantimodo.UserVariable);
  }
}(this, function(ApiClient, Chart, Correlation, GetStudyDataResponse, Highchart, HighchartArray, Pair, PairsOfAveragesForAllUser, ParticipantInstruction, ProcessedDailyMeasurement, Statistic, Text, UserStudy, UserVariable) {
  'use strict';




  /**
   * The GetStudyResponse model module.
   * @module model/GetStudyResponse
   * @version 5.8.824
   */

  /**
   * Constructs a new <code>GetStudyResponse</code>.
   * @alias module:model/GetStudyResponse
   * @class
   * @param status {Number} Status code
   * @param success {Boolean} 
   */
  var exports = function(status, success) {
    var _this = this;

    _this['status'] = status;

    _this['success'] = success;

















  };

  /**
   * Constructs a <code>GetStudyResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetStudyResponse} obj Optional instance to populate.
   * @return {module:model/GetStudyResponse} The populated <code>GetStudyResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'Number');
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
      if (data.hasOwnProperty('success')) {
        obj['success'] = ApiClient.convertToType(data['success'], 'Boolean');
      }
      if (data.hasOwnProperty('data')) {
        obj['data'] = GetStudyDataResponse.constructFromObject(data['data']);
      }
      if (data.hasOwnProperty('pairs')) {
        obj['pairs'] = ApiClient.convertToType(data['pairs'], [Pair]);
      }
      if (data.hasOwnProperty('causeProcessedDailyMeasurements')) {
        obj['causeProcessedDailyMeasurements'] = ApiClient.convertToType(data['causeProcessedDailyMeasurements'], [ProcessedDailyMeasurement]);
      }
      if (data.hasOwnProperty('effectProcessedDailyMeasurements')) {
        obj['effectProcessedDailyMeasurements'] = ApiClient.convertToType(data['effectProcessedDailyMeasurements'], [ProcessedDailyMeasurement]);
      }
      if (data.hasOwnProperty('userStudy')) {
        obj['userStudy'] = UserStudy.constructFromObject(data['userStudy']);
      }
      if (data.hasOwnProperty('causeVariable')) {
        obj['causeVariable'] = UserVariable.constructFromObject(data['causeVariable']);
      }
      if (data.hasOwnProperty('charts')) {
        obj['charts'] = ApiClient.convertToType(data['charts'], [Chart]);
      }
      if (data.hasOwnProperty('effectVariable')) {
        obj['effectVariable'] = UserVariable.constructFromObject(data['effectVariable']);
      }
      if (data.hasOwnProperty('statistics')) {
        obj['statistics'] = Statistic.constructFromObject(data['statistics']);
      }
      if (data.hasOwnProperty('userId')) {
        obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
      }
      if (data.hasOwnProperty('highchartArray')) {
        obj['highchartArray'] = ApiClient.convertToType(data['highchartArray'], [HighchartArray]);
      }
      if (data.hasOwnProperty('userCorrelations')) {
        obj['userCorrelations'] = ApiClient.convertToType(data['userCorrelations'], [Correlation]);
      }
      if (data.hasOwnProperty('pairsOfAveragesForAllUsers')) {
        obj['pairsOfAveragesForAllUsers'] = ApiClient.convertToType(data['pairsOfAveragesForAllUsers'], [PairsOfAveragesForAllUser]);
      }
      if (data.hasOwnProperty('text')) {
        obj['text'] = Text.constructFromObject(data['text']);
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('participantInstructions')) {
        obj['participantInstructions'] = ParticipantInstruction.constructFromObject(data['participantInstructions']);
      }
      if (data.hasOwnProperty('highcharts')) {
        obj['highcharts'] = Highchart.constructFromObject(data['highcharts']);
      }
    }
    return obj;
  }

  /**
   * Status code
   * @member {Number} status
   */
  exports.prototype['status'] = undefined;
  /**
   * Message
   * @member {String} message
   */
  exports.prototype['message'] = undefined;
  /**
   * @member {Boolean} success
   */
  exports.prototype['success'] = undefined;
  /**
   * @member {module:model/GetStudyDataResponse} data
   */
  exports.prototype['data'] = undefined;
  /**
   * @member {Array.<module:model/Pair>} pairs
   */
  exports.prototype['pairs'] = undefined;
  /**
   * @member {Array.<module:model/ProcessedDailyMeasurement>} causeProcessedDailyMeasurements
   */
  exports.prototype['causeProcessedDailyMeasurements'] = undefined;
  /**
   * @member {Array.<module:model/ProcessedDailyMeasurement>} effectProcessedDailyMeasurements
   */
  exports.prototype['effectProcessedDailyMeasurements'] = undefined;
  /**
   * @member {module:model/UserStudy} userStudy
   */
  exports.prototype['userStudy'] = undefined;
  /**
   * @member {module:model/UserVariable} causeVariable
   */
  exports.prototype['causeVariable'] = undefined;
  /**
   * @member {Array.<module:model/Chart>} charts
   */
  exports.prototype['charts'] = undefined;
  /**
   * @member {module:model/UserVariable} effectVariable
   */
  exports.prototype['effectVariable'] = undefined;
  /**
   * @member {module:model/Statistic} statistics
   */
  exports.prototype['statistics'] = undefined;
  /**
   * Example: 230
   * @member {Number} userId
   */
  exports.prototype['userId'] = undefined;
  /**
   * @member {Array.<module:model/HighchartArray>} highchartArray
   */
  exports.prototype['highchartArray'] = undefined;
  /**
   * @member {Array.<module:model/Correlation>} userCorrelations
   */
  exports.prototype['userCorrelations'] = undefined;
  /**
   * @member {Array.<module:model/PairsOfAveragesForAllUser>} pairsOfAveragesForAllUsers
   */
  exports.prototype['pairsOfAveragesForAllUsers'] = undefined;
  /**
   * @member {module:model/Text} text
   */
  exports.prototype['text'] = undefined;
  /**
   * Example: population
   * @member {String} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {module:model/ParticipantInstruction} participantInstructions
   */
  exports.prototype['participantInstructions'] = undefined;
  /**
   * @member {module:model/Highchart} highcharts
   */
  exports.prototype['highcharts'] = undefined;



  return exports;
}));


