/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The MeasurementUpdate model module.
* @module model/MeasurementUpdate
* @version 2.0
*/
export default class MeasurementUpdate {
    /**
    * Constructs a new <code>MeasurementUpdate</code>.
    * @alias module:model/MeasurementUpdate
    * @class
    * @param id {Number} Variable id of the measurement to be updated
    */

    constructor(id) {
        

        
        

        this['id'] = id;

        
    }

    /**
    * Constructs a <code>MeasurementUpdate</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/MeasurementUpdate} obj Optional instance to populate.
    * @return {module:model/MeasurementUpdate} The populated <code>MeasurementUpdate</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MeasurementUpdate();

            
            
            

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('note')) {
                obj['note'] = ApiClient.convertToType(data['note'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Number');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
    * Variable id of the measurement to be updated
    * @member {Number} id
    */
    id = undefined;
    /**
    * The new note for the measurement (optional)
    * @member {String} note
    */
    note = undefined;
    /**
    * The new timestamp for the the event in epoch seconds (optional)
    * @member {Number} startTime
    */
    startTime = undefined;
    /**
    * The new value of for the measurement (optional)
    * @member {Number} value
    */
    value = undefined;








}


