/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The ShareInvitationBody model module.
* @module model/ShareInvitationBody
* @version 2.0
*/
export default class ShareInvitationBody {
    /**
    * Constructs a new <code>ShareInvitationBody</code>.
    * @alias module:model/ShareInvitationBody
    * @class
    * @param emailAddress {String} Enter the email address of the friend, family member, or health-care provider that you would like to give access to your measurements
    */

    constructor(emailAddress) {
        

        
        

        this['emailAddress'] = emailAddress;

        
    }

    /**
    * Constructs a <code>ShareInvitationBody</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ShareInvitationBody} obj Optional instance to populate.
    * @return {module:model/ShareInvitationBody} The populated <code>ShareInvitationBody</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShareInvitationBody();

            
            
            

            if (data.hasOwnProperty('emailAddress')) {
                obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('emailSubject')) {
                obj['emailSubject'] = ApiClient.convertToType(data['emailSubject'], 'String');
            }
            if (data.hasOwnProperty('emailBody')) {
                obj['emailBody'] = ApiClient.convertToType(data['emailBody'], 'String');
            }
            if (data.hasOwnProperty('scopes')) {
                obj['scopes'] = ApiClient.convertToType(data['scopes'], 'String');
            }
        }
        return obj;
    }

    /**
    * Enter the email address of the friend, family member, or health-care provider that you would like to give access to your measurements
    * @member {String} emailAddress
    */
    emailAddress = undefined;
    /**
    * Name of the individual that the user wishes to have access to their measurements
    * @member {String} name
    */
    name = undefined;
    /**
    * Ex: I would like to share my measurements with you!
    * @member {String} emailSubject
    */
    emailSubject = undefined;
    /**
    * Ex: I would like to share my data with you so you can help me identify find discover hidden causes of and new treatments for my illness.
    * @member {String} emailBody
    */
    emailBody = undefined;
    /**
    * Space separated list of scopes to grant to the recipient (i.e. readmeasurements, writemeasurements, measurements:read
    * @member {String} scopes
    */
    scopes = undefined;








}


