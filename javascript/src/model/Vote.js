/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The Vote model module.
* @module model/Vote
* @version 2.0
*/
export default class Vote {
    /**
    * Constructs a new <code>Vote</code>.
    * @alias module:model/Vote
    * @class
    * @param causeVariableId {Number} Cause variable id
    * @param clientId {String} Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do
    * @param effectVariableId {Number} Effect variable id
    * @param userId {Number} ID of User
    * @param value {Boolean} Vote: 0 (for implausible) or 1 (for plausible)
    */

    constructor(causeVariableId, clientId, effectVariableId, userId, value) {
        

        
        

        this['causeVariableId'] = causeVariableId;this['clientId'] = clientId;this['effectVariableId'] = effectVariableId;this['userId'] = userId;this['value'] = value;

        
    }

    /**
    * Constructs a <code>Vote</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Vote} obj Optional instance to populate.
    * @return {module:model/Vote} The populated <code>Vote</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Vote();

            
            
            

            if (data.hasOwnProperty('causeVariableId')) {
                obj['causeVariableId'] = ApiClient.convertToType(data['causeVariableId'], 'Number');
            }
            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('effectVariableId')) {
                obj['effectVariableId'] = ApiClient.convertToType(data['effectVariableId'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Boolean');
            }
        }
        return obj;
    }

    /**
    * Cause variable id
    * @member {Number} causeVariableId
    */
    causeVariableId = undefined;
    /**
    * Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do
    * @member {String} clientId
    */
    clientId = undefined;
    /**
    * When the record was first created. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format
    * @member {String} createdAt
    */
    createdAt = undefined;
    /**
    * Effect variable id
    * @member {Number} effectVariableId
    */
    effectVariableId = undefined;
    /**
    * id
    * @member {Number} id
    */
    id = undefined;
    /**
    * When the record in the database was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format
    * @member {String} updatedAt
    */
    updatedAt = undefined;
    /**
    * ID of User
    * @member {Number} userId
    */
    userId = undefined;
    /**
    * Vote: 0 (for implausible) or 1 (for plausible)
    * @member {Boolean} value
    */
    value = undefined;








}


