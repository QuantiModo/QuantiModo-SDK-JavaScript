/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The DataSource model module.
* @module model/DataSource
* @version 2.0
*/
export default class DataSource {
    /**
    * Constructs a new <code>DataSource</code>.
    * @alias module:model/DataSource
    * @class
    * @param affiliate {Boolean} Ex: true
    * @param connectorClientId {String} Ex: ba7d0c12432650e23b3ce924ae2d21e2ff59e7e4e28650759633700af7ed0a30
    * @param defaultVariableCategoryName {String} Ex: Foods
    * @param displayName {String} Ex: QuantiModo
    * @param enabled {Number} Ex: 0
    * @param getItUrl {String} Ex: https://quantimo.do
    * @param id {Number} Ex: 72
    * @param image {String} Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/logos/quantimodo-logo-qm-rainbow-200-200.png
    * @param imageHtml {String} Ex: <a href=\"https://quantimo.do\"><img id=\"quantimodo_image\" title=\"QuantiModo\" src=\"https://quantimodo.quantimo.do/ionic/Modo/www/img/logos/quantimodo-logo-qm-rainbow-200-200.png\" alt=\"QuantiModo\"></a>
    * @param linkedDisplayNameHtml {String} Ex: <a href=\"https://quantimo.do\">QuantiModo</a>
    * @param longDescription {String} Ex: QuantiModo is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  QuantiModo then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.
    * @param name {String} Ex: quantimodo
    * @param shortDescription {String} Ex: Tracks anything
    */

    constructor(affiliate, connectorClientId, defaultVariableCategoryName, displayName, enabled, getItUrl, id, image, imageHtml, linkedDisplayNameHtml, longDescription, name, shortDescription) {
        

        
        

        this['affiliate'] = affiliate;this['connectorClientId'] = connectorClientId;this['defaultVariableCategoryName'] = defaultVariableCategoryName;this['displayName'] = displayName;this['enabled'] = enabled;this['getItUrl'] = getItUrl;this['id'] = id;this['image'] = image;this['imageHtml'] = imageHtml;this['linkedDisplayNameHtml'] = linkedDisplayNameHtml;this['longDescription'] = longDescription;this['name'] = name;this['shortDescription'] = shortDescription;

        
    }

    /**
    * Constructs a <code>DataSource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/DataSource} obj Optional instance to populate.
    * @return {module:model/DataSource} The populated <code>DataSource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataSource();

            
            
            

            if (data.hasOwnProperty('affiliate')) {
                obj['affiliate'] = ApiClient.convertToType(data['affiliate'], 'Boolean');
            }
            if (data.hasOwnProperty('connectorClientId')) {
                obj['connectorClientId'] = ApiClient.convertToType(data['connectorClientId'], 'String');
            }
            if (data.hasOwnProperty('defaultVariableCategoryName')) {
                obj['defaultVariableCategoryName'] = ApiClient.convertToType(data['defaultVariableCategoryName'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Number');
            }
            if (data.hasOwnProperty('getItUrl')) {
                obj['getItUrl'] = ApiClient.convertToType(data['getItUrl'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], 'String');
            }
            if (data.hasOwnProperty('imageHtml')) {
                obj['imageHtml'] = ApiClient.convertToType(data['imageHtml'], 'String');
            }
            if (data.hasOwnProperty('linkedDisplayNameHtml')) {
                obj['linkedDisplayNameHtml'] = ApiClient.convertToType(data['linkedDisplayNameHtml'], 'String');
            }
            if (data.hasOwnProperty('longDescription')) {
                obj['longDescription'] = ApiClient.convertToType(data['longDescription'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('shortDescription')) {
                obj['shortDescription'] = ApiClient.convertToType(data['shortDescription'], 'String');
            }
        }
        return obj;
    }

    /**
    * Ex: true
    * @member {Boolean} affiliate
    */
    affiliate = undefined;
    /**
    * Ex: ba7d0c12432650e23b3ce924ae2d21e2ff59e7e4e28650759633700af7ed0a30
    * @member {String} connectorClientId
    */
    connectorClientId = undefined;
    /**
    * Ex: Foods
    * @member {String} defaultVariableCategoryName
    */
    defaultVariableCategoryName = undefined;
    /**
    * Ex: QuantiModo
    * @member {String} displayName
    */
    displayName = undefined;
    /**
    * Ex: 0
    * @member {Number} enabled
    */
    enabled = undefined;
    /**
    * Ex: https://quantimo.do
    * @member {String} getItUrl
    */
    getItUrl = undefined;
    /**
    * Ex: 72
    * @member {Number} id
    */
    id = undefined;
    /**
    * Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/logos/quantimodo-logo-qm-rainbow-200-200.png
    * @member {String} image
    */
    image = undefined;
    /**
    * Ex: <a href=\"https://quantimo.do\"><img id=\"quantimodo_image\" title=\"QuantiModo\" src=\"https://quantimodo.quantimo.do/ionic/Modo/www/img/logos/quantimodo-logo-qm-rainbow-200-200.png\" alt=\"QuantiModo\"></a>
    * @member {String} imageHtml
    */
    imageHtml = undefined;
    /**
    * Ex: <a href=\"https://quantimo.do\">QuantiModo</a>
    * @member {String} linkedDisplayNameHtml
    */
    linkedDisplayNameHtml = undefined;
    /**
    * Ex: QuantiModo is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  QuantiModo then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.
    * @member {String} longDescription
    */
    longDescription = undefined;
    /**
    * Ex: quantimodo
    * @member {String} name
    */
    name = undefined;
    /**
    * Ex: Tracks anything
    * @member {String} shortDescription
    */
    shortDescription = undefined;








}


