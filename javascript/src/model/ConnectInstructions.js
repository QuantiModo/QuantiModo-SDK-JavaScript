/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The ConnectInstructions model module.
* @module model/ConnectInstructions
* @version 2.0
*/
export default class ConnectInstructions {
    /**
    * Constructs a new <code>ConnectInstructions</code>.
    * @alias module:model/ConnectInstructions
    * @class
    * @param url {String} URL to open to connect
    */

    constructor(url) {
        

        
        

        this['url'] = url;

        
    }

    /**
    * Constructs a <code>ConnectInstructions</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ConnectInstructions} obj Optional instance to populate.
    * @return {module:model/ConnectInstructions} The populated <code>ConnectInstructions</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConnectInstructions();

            
            
            

            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [Object]);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('usePopup')) {
                obj['usePopup'] = ApiClient.convertToType(data['usePopup'], 'Boolean');
            }
        }
        return obj;
    }

    /**
    * Create a form with these fields and post the key and user submitted value to the provided connect url
    * @member {Array.<Object>} parameters
    */
    parameters = undefined;
    /**
    * URL to open to connect
    * @member {String} url
    */
    url = undefined;
    /**
    * True if should open auth window in popup
    * @member {Boolean} usePopup
    */
    usePopup = undefined;








}


