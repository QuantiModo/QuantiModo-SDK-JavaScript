/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Chart from './Chart';





/**
* The StudyCharts model module.
* @module model/StudyCharts
* @version 2.0
*/
export default class StudyCharts {
    /**
    * Constructs a new <code>StudyCharts</code>.
    * An object with various chart properties each property contain and svg and Highcharts configuration
    * @alias module:model/StudyCharts
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>StudyCharts</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/StudyCharts} obj Optional instance to populate.
    * @return {module:model/StudyCharts} The populated <code>StudyCharts</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StudyCharts();

            
            
            

            if (data.hasOwnProperty('populationTraitScatterPlot')) {
                obj['populationTraitScatterPlot'] = Chart.constructFromObject(data['populationTraitScatterPlot']);
            }
            if (data.hasOwnProperty('outcomeDistributionColumnChart')) {
                obj['outcomeDistributionColumnChart'] = Chart.constructFromObject(data['outcomeDistributionColumnChart']);
            }
            if (data.hasOwnProperty('predictorDistributionColumnChart')) {
                obj['predictorDistributionColumnChart'] = Chart.constructFromObject(data['predictorDistributionColumnChart']);
            }
            if (data.hasOwnProperty('correlationScatterPlot')) {
                obj['correlationScatterPlot'] = Chart.constructFromObject(data['correlationScatterPlot']);
            }
            if (data.hasOwnProperty('pairsOverTimeLineChart')) {
                obj['pairsOverTimeLineChart'] = Chart.constructFromObject(data['pairsOverTimeLineChart']);
            }
        }
        return obj;
    }

    /**
    * @member {module:model/Chart} populationTraitScatterPlot
    */
    populationTraitScatterPlot = undefined;
    /**
    * @member {module:model/Chart} outcomeDistributionColumnChart
    */
    outcomeDistributionColumnChart = undefined;
    /**
    * @member {module:model/Chart} predictorDistributionColumnChart
    */
    predictorDistributionColumnChart = undefined;
    /**
    * @member {module:model/Chart} correlationScatterPlot
    */
    correlationScatterPlot = undefined;
    /**
    * @member {module:model/Chart} pairsOverTimeLineChart
    */
    pairsOverTimeLineChart = undefined;








}


