/**
 * QuantiModo
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do). 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.quantimodo-api) {
      root.quantimodo-api = {};
    }
    root.quantimodo-api.UserVariableRelationship = factory(root.quantimodo-api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The UserVariableRelationship model module.
   * @module model/UserVariableRelationship
   * @version 2.0
   */

  /**
   * Constructs a new <code>UserVariableRelationship</code>.
   * @alias module:model/UserVariableRelationship
   * @class
   * @param confidenceLevel {String} Our confidence that a consistent predictive relationship exists based on the amount of evidence, reproducibility, and other factors
   * @param confidenceScore {Number} A quantitative representation of our confidence that a consistent predictive relationship exists based on the amount of evidence, reproducibility, and other factors
   * @param direction {String} Direction is positive if higher predictor values generally precede higher outcome values. Direction is negative if higher predictor values generally precede lower outcome values.
   * @param durationOfAction {Number} The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable’s value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.
   * @param outcomeVariableId {Number} Variable ID for the outcome variable
   * @param predictorVariableId {Number} Variable ID for the predictor variable
   * @param predictorUnitId {Number} ID for default unit of the predictor variable
   * @param sinnRank {Number} A value representative of the relevance of this predictor relative to other predictors of this outcome.  Usually used for relevancy sorting.
   * @param strengthLevel {String} Can be weak, medium, or strong based on the size of the effect which the predictor appears to have on the outcome relative to other variable relationship strength scores.
   * @param strengthScore {Number} A value represented to the size of the effect which the predictor appears to have on the outcome.
   * @param valuePredictingHighOutcome {Number} Value for the predictor variable (in it's default unit) which typically precedes an above average outcome value
   * @param valuePredictingLowOutcome {Number} Value for the predictor variable (in it's default unit) which typically precedes a below average outcome value
   */
  var exports = function(confidenceLevel, confidenceScore, direction, durationOfAction, outcomeVariableId, predictorVariableId, predictorUnitId, sinnRank, strengthLevel, strengthScore, valuePredictingHighOutcome, valuePredictingLowOutcome) {
    var _this = this;


    _this['confidence_level'] = confidenceLevel;
    _this['confidence_score'] = confidenceScore;
    _this['direction'] = direction;
    _this['duration_of_action'] = durationOfAction;


    _this['outcome_variableId'] = outcomeVariableId;
    _this['predictor_variableId'] = predictorVariableId;
    _this['predictor_unit_id'] = predictorUnitId;
    _this['sinn_rank'] = sinnRank;
    _this['strength_level'] = strengthLevel;
    _this['strength_score'] = strengthScore;


    _this['value_predicting_high_outcome'] = valuePredictingHighOutcome;
    _this['value_predicting_low_outcome'] = valuePredictingLowOutcome;
  };

  /**
   * Constructs a <code>UserVariableRelationship</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserVariableRelationship} obj Optional instance to populate.
   * @return {module:model/UserVariableRelationship} The populated <code>UserVariableRelationship</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('confidence_level')) {
        obj['confidence_level'] = ApiClient.convertToType(data['confidence_level'], 'String');
      }
      if (data.hasOwnProperty('confidence_score')) {
        obj['confidence_score'] = ApiClient.convertToType(data['confidence_score'], 'Number');
      }
      if (data.hasOwnProperty('direction')) {
        obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
      }
      if (data.hasOwnProperty('duration_of_action')) {
        obj['duration_of_action'] = ApiClient.convertToType(data['duration_of_action'], 'Number');
      }
      if (data.hasOwnProperty('error_message')) {
        obj['error_message'] = ApiClient.convertToType(data['error_message'], 'String');
      }
      if (data.hasOwnProperty('onset_delay')) {
        obj['onset_delay'] = ApiClient.convertToType(data['onset_delay'], 'Number');
      }
      if (data.hasOwnProperty('outcome_variableId')) {
        obj['outcome_variableId'] = ApiClient.convertToType(data['outcome_variableId'], 'Number');
      }
      if (data.hasOwnProperty('predictor_variableId')) {
        obj['predictor_variableId'] = ApiClient.convertToType(data['predictor_variableId'], 'Number');
      }
      if (data.hasOwnProperty('predictor_unit_id')) {
        obj['predictor_unit_id'] = ApiClient.convertToType(data['predictor_unit_id'], 'Number');
      }
      if (data.hasOwnProperty('sinn_rank')) {
        obj['sinn_rank'] = ApiClient.convertToType(data['sinn_rank'], 'Number');
      }
      if (data.hasOwnProperty('strength_level')) {
        obj['strength_level'] = ApiClient.convertToType(data['strength_level'], 'String');
      }
      if (data.hasOwnProperty('strength_score')) {
        obj['strength_score'] = ApiClient.convertToType(data['strength_score'], 'Number');
      }
      if (data.hasOwnProperty('userId')) {
        obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
      }
      if (data.hasOwnProperty('vote')) {
        obj['vote'] = ApiClient.convertToType(data['vote'], 'String');
      }
      if (data.hasOwnProperty('value_predicting_high_outcome')) {
        obj['value_predicting_high_outcome'] = ApiClient.convertToType(data['value_predicting_high_outcome'], 'Number');
      }
      if (data.hasOwnProperty('value_predicting_low_outcome')) {
        obj['value_predicting_low_outcome'] = ApiClient.convertToType(data['value_predicting_low_outcome'], 'Number');
      }
    }
    return obj;
  }

  /**
   * id
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Our confidence that a consistent predictive relationship exists based on the amount of evidence, reproducibility, and other factors
   * @member {String} confidence_level
   */
  exports.prototype['confidence_level'] = undefined;
  /**
   * A quantitative representation of our confidence that a consistent predictive relationship exists based on the amount of evidence, reproducibility, and other factors
   * @member {Number} confidence_score
   */
  exports.prototype['confidence_score'] = undefined;
  /**
   * Direction is positive if higher predictor values generally precede higher outcome values. Direction is negative if higher predictor values generally precede lower outcome values.
   * @member {String} direction
   */
  exports.prototype['direction'] = undefined;
  /**
   * The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable’s value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.
   * @member {Number} duration_of_action
   */
  exports.prototype['duration_of_action'] = undefined;
  /**
   * error_message
   * @member {String} error_message
   */
  exports.prototype['error_message'] = undefined;
  /**
   * The amount of time in seconds that elapses after the predictor/stimulus event before the outcome as perceived by a self-tracker is known as the “onset delay”. For example, the “onset delay” between the time a person takes an aspirin (predictor/stimulus event) and the time a person perceives a change in their headache severity (outcome) is approximately 30 minutes.
   * @member {Number} onset_delay
   */
  exports.prototype['onset_delay'] = undefined;
  /**
   * Variable ID for the outcome variable
   * @member {Number} outcome_variableId
   */
  exports.prototype['outcome_variableId'] = undefined;
  /**
   * Variable ID for the predictor variable
   * @member {Number} predictor_variableId
   */
  exports.prototype['predictor_variableId'] = undefined;
  /**
   * ID for default unit of the predictor variable
   * @member {Number} predictor_unit_id
   */
  exports.prototype['predictor_unit_id'] = undefined;
  /**
   * A value representative of the relevance of this predictor relative to other predictors of this outcome.  Usually used for relevancy sorting.
   * @member {Number} sinn_rank
   */
  exports.prototype['sinn_rank'] = undefined;
  /**
   * Can be weak, medium, or strong based on the size of the effect which the predictor appears to have on the outcome relative to other variable relationship strength scores.
   * @member {String} strength_level
   */
  exports.prototype['strength_level'] = undefined;
  /**
   * A value represented to the size of the effect which the predictor appears to have on the outcome.
   * @member {Number} strength_score
   */
  exports.prototype['strength_score'] = undefined;
  /**
   * userId
   * @member {Number} userId
   */
  exports.prototype['userId'] = undefined;
  /**
   * vote
   * @member {String} vote
   */
  exports.prototype['vote'] = undefined;
  /**
   * Value for the predictor variable (in it's default unit) which typically precedes an above average outcome value
   * @member {Number} value_predicting_high_outcome
   */
  exports.prototype['value_predicting_high_outcome'] = undefined;
  /**
   * Value for the predictor variable (in it's default unit) which typically precedes a below average outcome value
   * @member {Number} value_predicting_low_outcome
   */
  exports.prototype['value_predicting_low_outcome'] = undefined;



  return exports;
}));


