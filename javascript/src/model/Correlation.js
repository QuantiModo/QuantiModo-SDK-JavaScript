/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import DataSource from './DataSource';
import StudyHtml from './StudyHtml';
import StudyImages from './StudyImages';
import StudyLinks from './StudyLinks';
import StudyText from './StudyText';





/**
* The Correlation model module.
* @module model/Correlation
* @version 2.0
*/
export default class Correlation {
    /**
    * Constructs a new <code>Correlation</code>.
    * @alias module:model/Correlation
    * @class
    * @param averageDailyHighCause {Number} Ex: 4.19
    * @param averageDailyLowCause {Number} Ex: 1.97
    * @param averageEffect {Number} Ex: 3.0791054117396
    * @param averageEffectFollowingHighCause {Number} Ex: 3.55
    * @param averageEffectFollowingLowCause {Number} Ex: 2.65
    * @param averageForwardPearsonCorrelationOverOnsetDelays {Number} Ex: 0.396
    * @param averageReversePearsonCorrelationOverOnsetDelays {Number} Ex: 0.453667
    * @param averageVote {Number} Ex: 0.9855
    * @param causeChanges {Number} Ex: 164
    * @param causeUserVariableShareUserMeasurements {Number} Ex: 1
    * @param causeVariableName {String} Ex: Sleep Quality
    * @param confidenceInterval {Number} Ex: 0.14344467795996
    * @param confidenceLevel {String} Ex: high
    * @param correlationCoefficient {Number} Ex: 0.538
    * @param createdAt {String} Ex: 2016-12-28 20:47:30 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
    * @param criticalTValue {Number} Ex: 1.646
    * @param direction {String} Ex: higher
    * @param durationOfAction {Number} Ex: 604800
    * @param durationOfActionInHours {Number} Ex: 168
    * @param effectChanges {Number} Ex: 193
    * @param effectSize {String} Ex: moderately positive
    * @param effectUnit {String} Ex: /5
    * @param effectVariableName {String} Ex: Overall Mood
    * @param experimentEndTime {String} Ex: 2014-07-30 12:50:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
    * @param experimentStartTime {String} Ex: 2012-05-06 21:15:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
    * @param forwardSpearmanCorrelationCoefficient {Number} Ex: 0.528359
    * @param numberOfPairs {Number} Ex: 298
    * @param onsetDelay {Number} Ex: 0
    * @param onsetDelayInHours {Number} Ex: 0
    * @param onsetDelayWithStrongestPearsonCorrelation {Number} Ex: -86400
    * @param onsetDelayWithStrongestPearsonCorrelationInHours {Number} Ex: -24
    * @param optimalPearsonProduct {Number} Ex: 0.68582816186982
    * @param outcomeFillingValue {Number} Ex: -1
    * @param pearsonCorrelationWithNoOnsetDelay {Number} Ex: 0.477
    * @param predictivePearsonCorrelation {Number} Ex: 0.538
    * @param predictivePearsonCorrelationCoefficient {Number} Ex: 0.538
    * @param predictorDataSources {String} Ex: RescueTime
    * @param predictorFillingValue {Number} Ex: -1
    * @param predictorMaximumAllowedValue {Number} Ex: 200
    * @param predictorMinimumAllowedValue {Number} Ex: 30
    * @param predictsHighEffectChange {Number} Ex: 17
    * @param predictsLowEffectChange {Number} Ex: -11
    * @param qmScore {Number} Ex: 0.528
    * @param reversePearsonCorrelationCoefficient {Number} Ex: 0.01377184270977
    * @param shareUserMeasurements {Boolean} Ex: 1
    * @param significantDifference {Boolean} Ex: 1
    * @param statisticalSignificance {Number} Ex: 0.9813
    * @param strengthLevel {String} Ex: moderate
    * @param strongestPearsonCorrelationCoefficient {Number} Ex: 0.613
    * @param tValue {Number} Ex: 9.6986079652717
    * @param updatedAt {String} Ex: 2017-05-06 15:40:38 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
    * @param userId {Number} Ex: 230
    * @param userVote {Number} Ex: 1
    * @param valuePredictingHighOutcome {Number} Ex: 4.14
    * @param valuePredictingLowOutcome {Number} Ex: 3.03
    */

    constructor(averageDailyHighCause, averageDailyLowCause, averageEffect, averageEffectFollowingHighCause, averageEffectFollowingLowCause, averageForwardPearsonCorrelationOverOnsetDelays, averageReversePearsonCorrelationOverOnsetDelays, averageVote, causeChanges, causeUserVariableShareUserMeasurements, causeVariableName, confidenceInterval, confidenceLevel, correlationCoefficient, createdAt, criticalTValue, direction, durationOfAction, durationOfActionInHours, effectChanges, effectSize, effectUnit, effectVariableName, experimentEndTime, experimentStartTime, forwardSpearmanCorrelationCoefficient, numberOfPairs, onsetDelay, onsetDelayInHours, onsetDelayWithStrongestPearsonCorrelation, onsetDelayWithStrongestPearsonCorrelationInHours, optimalPearsonProduct, outcomeFillingValue, pearsonCorrelationWithNoOnsetDelay, predictivePearsonCorrelation, predictivePearsonCorrelationCoefficient, predictorDataSources, predictorFillingValue, predictorMaximumAllowedValue, predictorMinimumAllowedValue, predictsHighEffectChange, predictsLowEffectChange, qmScore, reversePearsonCorrelationCoefficient, shareUserMeasurements, significantDifference, statisticalSignificance, strengthLevel, strongestPearsonCorrelationCoefficient, tValue, updatedAt, userId, userVote, valuePredictingHighOutcome, valuePredictingLowOutcome) {
        

        
        

        this['averageDailyHighCause'] = averageDailyHighCause;this['averageDailyLowCause'] = averageDailyLowCause;this['averageEffect'] = averageEffect;this['averageEffectFollowingHighCause'] = averageEffectFollowingHighCause;this['averageEffectFollowingLowCause'] = averageEffectFollowingLowCause;this['averageForwardPearsonCorrelationOverOnsetDelays'] = averageForwardPearsonCorrelationOverOnsetDelays;this['averageReversePearsonCorrelationOverOnsetDelays'] = averageReversePearsonCorrelationOverOnsetDelays;this['averageVote'] = averageVote;this['causeChanges'] = causeChanges;this['causeUserVariableShareUserMeasurements'] = causeUserVariableShareUserMeasurements;this['causeVariableName'] = causeVariableName;this['confidenceInterval'] = confidenceInterval;this['confidenceLevel'] = confidenceLevel;this['correlationCoefficient'] = correlationCoefficient;this['createdAt'] = createdAt;this['criticalTValue'] = criticalTValue;this['direction'] = direction;this['durationOfAction'] = durationOfAction;this['durationOfActionInHours'] = durationOfActionInHours;this['effectChanges'] = effectChanges;this['effectSize'] = effectSize;this['effectUnit'] = effectUnit;this['effectVariableName'] = effectVariableName;this['experimentEndTime'] = experimentEndTime;this['experimentStartTime'] = experimentStartTime;this['forwardSpearmanCorrelationCoefficient'] = forwardSpearmanCorrelationCoefficient;this['numberOfPairs'] = numberOfPairs;this['onsetDelay'] = onsetDelay;this['onsetDelayInHours'] = onsetDelayInHours;this['onsetDelayWithStrongestPearsonCorrelation'] = onsetDelayWithStrongestPearsonCorrelation;this['onsetDelayWithStrongestPearsonCorrelationInHours'] = onsetDelayWithStrongestPearsonCorrelationInHours;this['optimalPearsonProduct'] = optimalPearsonProduct;this['outcomeFillingValue'] = outcomeFillingValue;this['pearsonCorrelationWithNoOnsetDelay'] = pearsonCorrelationWithNoOnsetDelay;this['predictivePearsonCorrelation'] = predictivePearsonCorrelation;this['predictivePearsonCorrelationCoefficient'] = predictivePearsonCorrelationCoefficient;this['predictorDataSources'] = predictorDataSources;this['predictorFillingValue'] = predictorFillingValue;this['predictorMaximumAllowedValue'] = predictorMaximumAllowedValue;this['predictorMinimumAllowedValue'] = predictorMinimumAllowedValue;this['predictsHighEffectChange'] = predictsHighEffectChange;this['predictsLowEffectChange'] = predictsLowEffectChange;this['qmScore'] = qmScore;this['reversePearsonCorrelationCoefficient'] = reversePearsonCorrelationCoefficient;this['shareUserMeasurements'] = shareUserMeasurements;this['significantDifference'] = significantDifference;this['statisticalSignificance'] = statisticalSignificance;this['strengthLevel'] = strengthLevel;this['strongestPearsonCorrelationCoefficient'] = strongestPearsonCorrelationCoefficient;this['tValue'] = tValue;this['updatedAt'] = updatedAt;this['userId'] = userId;this['userVote'] = userVote;this['valuePredictingHighOutcome'] = valuePredictingHighOutcome;this['valuePredictingLowOutcome'] = valuePredictingLowOutcome;

        
    }

    /**
    * Constructs a <code>Correlation</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Correlation} obj Optional instance to populate.
    * @return {module:model/Correlation} The populated <code>Correlation</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Correlation();

            
            
            

            if (data.hasOwnProperty('averageDailyHighCause')) {
                obj['averageDailyHighCause'] = ApiClient.convertToType(data['averageDailyHighCause'], 'Number');
            }
            if (data.hasOwnProperty('averageDailyLowCause')) {
                obj['averageDailyLowCause'] = ApiClient.convertToType(data['averageDailyLowCause'], 'Number');
            }
            if (data.hasOwnProperty('averageEffect')) {
                obj['averageEffect'] = ApiClient.convertToType(data['averageEffect'], 'Number');
            }
            if (data.hasOwnProperty('averageEffectFollowingHighCause')) {
                obj['averageEffectFollowingHighCause'] = ApiClient.convertToType(data['averageEffectFollowingHighCause'], 'Number');
            }
            if (data.hasOwnProperty('averageEffectFollowingLowCause')) {
                obj['averageEffectFollowingLowCause'] = ApiClient.convertToType(data['averageEffectFollowingLowCause'], 'Number');
            }
            if (data.hasOwnProperty('averageForwardPearsonCorrelationOverOnsetDelays')) {
                obj['averageForwardPearsonCorrelationOverOnsetDelays'] = ApiClient.convertToType(data['averageForwardPearsonCorrelationOverOnsetDelays'], 'Number');
            }
            if (data.hasOwnProperty('averageReversePearsonCorrelationOverOnsetDelays')) {
                obj['averageReversePearsonCorrelationOverOnsetDelays'] = ApiClient.convertToType(data['averageReversePearsonCorrelationOverOnsetDelays'], 'Number');
            }
            if (data.hasOwnProperty('averageVote')) {
                obj['averageVote'] = ApiClient.convertToType(data['averageVote'], 'Number');
            }
            if (data.hasOwnProperty('causeChanges')) {
                obj['causeChanges'] = ApiClient.convertToType(data['causeChanges'], 'Number');
            }
            if (data.hasOwnProperty('causeDataSource')) {
                obj['causeDataSource'] = DataSource.constructFromObject(data['causeDataSource']);
            }
            if (data.hasOwnProperty('causeUserVariableShareUserMeasurements')) {
                obj['causeUserVariableShareUserMeasurements'] = ApiClient.convertToType(data['causeUserVariableShareUserMeasurements'], 'Number');
            }
            if (data.hasOwnProperty('causeVariableCategoryId')) {
                obj['causeVariableCategoryId'] = ApiClient.convertToType(data['causeVariableCategoryId'], 'Number');
            }
            if (data.hasOwnProperty('causeVariableCategoryName')) {
                obj['causeVariableCategoryName'] = ApiClient.convertToType(data['causeVariableCategoryName'], 'String');
            }
            if (data.hasOwnProperty('causeVariableCombinationOperation')) {
                obj['causeVariableCombinationOperation'] = ApiClient.convertToType(data['causeVariableCombinationOperation'], 'String');
            }
            if (data.hasOwnProperty('causeVariableUnitAbbreviatedName')) {
                obj['causeVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['causeVariableUnitAbbreviatedName'], 'String');
            }
            if (data.hasOwnProperty('causeVariableId')) {
                obj['causeVariableId'] = ApiClient.convertToType(data['causeVariableId'], 'Number');
            }
            if (data.hasOwnProperty('causeVariableMostCommonConnectorId')) {
                obj['causeVariableMostCommonConnectorId'] = ApiClient.convertToType(data['causeVariableMostCommonConnectorId'], 'Number');
            }
            if (data.hasOwnProperty('causeVariableName')) {
                obj['causeVariableName'] = ApiClient.convertToType(data['causeVariableName'], 'String');
            }
            if (data.hasOwnProperty('confidenceInterval')) {
                obj['confidenceInterval'] = ApiClient.convertToType(data['confidenceInterval'], 'Number');
            }
            if (data.hasOwnProperty('confidenceLevel')) {
                obj['confidenceLevel'] = ApiClient.convertToType(data['confidenceLevel'], 'String');
            }
            if (data.hasOwnProperty('correlationCoefficient')) {
                obj['correlationCoefficient'] = ApiClient.convertToType(data['correlationCoefficient'], 'Number');
            }
            if (data.hasOwnProperty('correlationIsContradictoryToOptimalValues')) {
                obj['correlationIsContradictoryToOptimalValues'] = ApiClient.convertToType(data['correlationIsContradictoryToOptimalValues'], 'Boolean');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('criticalTValue')) {
                obj['criticalTValue'] = ApiClient.convertToType(data['criticalTValue'], 'Number');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('durationOfAction')) {
                obj['durationOfAction'] = ApiClient.convertToType(data['durationOfAction'], 'Number');
            }
            if (data.hasOwnProperty('durationOfActionInHours')) {
                obj['durationOfActionInHours'] = ApiClient.convertToType(data['durationOfActionInHours'], 'Number');
            }
            if (data.hasOwnProperty('degreesOfFreedom')) {
                obj['degreesOfFreedom'] = ApiClient.convertToType(data['degreesOfFreedom'], 'Number');
            }
            if (data.hasOwnProperty('effectNumberOfProcessedDailyMeasurements')) {
                obj['effectNumberOfProcessedDailyMeasurements'] = ApiClient.convertToType(data['effectNumberOfProcessedDailyMeasurements'], 'Number');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('effectChanges')) {
                obj['effectChanges'] = ApiClient.convertToType(data['effectChanges'], 'Number');
            }
            if (data.hasOwnProperty('effectDataSource')) {
                obj['effectDataSource'] = DataSource.constructFromObject(data['effectDataSource']);
            }
            if (data.hasOwnProperty('effectSize')) {
                obj['effectSize'] = ApiClient.convertToType(data['effectSize'], 'String');
            }
            if (data.hasOwnProperty('effectUnit')) {
                obj['effectUnit'] = ApiClient.convertToType(data['effectUnit'], 'String');
            }
            if (data.hasOwnProperty('effectUserVariableShareUserMeasurements')) {
                obj['effectUserVariableShareUserMeasurements'] = ApiClient.convertToType(data['effectUserVariableShareUserMeasurements'], 'Number');
            }
            if (data.hasOwnProperty('effectVariableCategoryId')) {
                obj['effectVariableCategoryId'] = ApiClient.convertToType(data['effectVariableCategoryId'], 'Number');
            }
            if (data.hasOwnProperty('effectVariableCategoryName')) {
                obj['effectVariableCategoryName'] = ApiClient.convertToType(data['effectVariableCategoryName'], 'String');
            }
            if (data.hasOwnProperty('effectVariableCombinationOperation')) {
                obj['effectVariableCombinationOperation'] = ApiClient.convertToType(data['effectVariableCombinationOperation'], 'String');
            }
            if (data.hasOwnProperty('effectVariableCommonAlias')) {
                obj['effectVariableCommonAlias'] = ApiClient.convertToType(data['effectVariableCommonAlias'], 'String');
            }
            if (data.hasOwnProperty('effectVariableUnitAbbreviatedName')) {
                obj['effectVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['effectVariableUnitAbbreviatedName'], 'String');
            }
            if (data.hasOwnProperty('effectVariableUnitId')) {
                obj['effectVariableUnitId'] = ApiClient.convertToType(data['effectVariableUnitId'], 'Number');
            }
            if (data.hasOwnProperty('effectVariableUnitName')) {
                obj['effectVariableUnitName'] = ApiClient.convertToType(data['effectVariableUnitName'], 'String');
            }
            if (data.hasOwnProperty('effectVariableId')) {
                obj['effectVariableId'] = ApiClient.convertToType(data['effectVariableId'], 'Number');
            }
            if (data.hasOwnProperty('effectVariableMostCommonConnectorId')) {
                obj['effectVariableMostCommonConnectorId'] = ApiClient.convertToType(data['effectVariableMostCommonConnectorId'], 'Number');
            }
            if (data.hasOwnProperty('effectVariableName')) {
                obj['effectVariableName'] = ApiClient.convertToType(data['effectVariableName'], 'String');
            }
            if (data.hasOwnProperty('experimentEndTime')) {
                obj['experimentEndTime'] = ApiClient.convertToType(data['experimentEndTime'], 'String');
            }
            if (data.hasOwnProperty('experimentStartTime')) {
                obj['experimentStartTime'] = ApiClient.convertToType(data['experimentStartTime'], 'String');
            }
            if (data.hasOwnProperty('forwardSpearmanCorrelationCoefficient')) {
                obj['forwardSpearmanCorrelationCoefficient'] = ApiClient.convertToType(data['forwardSpearmanCorrelationCoefficient'], 'Number');
            }
            if (data.hasOwnProperty('numberOfPairs')) {
                obj['numberOfPairs'] = ApiClient.convertToType(data['numberOfPairs'], 'Number');
            }
            if (data.hasOwnProperty('onsetDelay')) {
                obj['onsetDelay'] = ApiClient.convertToType(data['onsetDelay'], 'Number');
            }
            if (data.hasOwnProperty('onsetDelayInHours')) {
                obj['onsetDelayInHours'] = ApiClient.convertToType(data['onsetDelayInHours'], 'Number');
            }
            if (data.hasOwnProperty('onsetDelayWithStrongestPearsonCorrelation')) {
                obj['onsetDelayWithStrongestPearsonCorrelation'] = ApiClient.convertToType(data['onsetDelayWithStrongestPearsonCorrelation'], 'Number');
            }
            if (data.hasOwnProperty('onsetDelayWithStrongestPearsonCorrelationInHours')) {
                obj['onsetDelayWithStrongestPearsonCorrelationInHours'] = ApiClient.convertToType(data['onsetDelayWithStrongestPearsonCorrelationInHours'], 'Number');
            }
            if (data.hasOwnProperty('optimalPearsonProduct')) {
                obj['optimalPearsonProduct'] = ApiClient.convertToType(data['optimalPearsonProduct'], 'Number');
            }
            if (data.hasOwnProperty('outcomeFillingValue')) {
                obj['outcomeFillingValue'] = ApiClient.convertToType(data['outcomeFillingValue'], 'Number');
            }
            if (data.hasOwnProperty('outcomeMaximumAllowedValue')) {
                obj['outcomeMaximumAllowedValue'] = ApiClient.convertToType(data['outcomeMaximumAllowedValue'], 'Number');
            }
            if (data.hasOwnProperty('outcomeMinimumAllowedValue')) {
                obj['outcomeMinimumAllowedValue'] = ApiClient.convertToType(data['outcomeMinimumAllowedValue'], 'Number');
            }
            if (data.hasOwnProperty('pearsonCorrelationWithNoOnsetDelay')) {
                obj['pearsonCorrelationWithNoOnsetDelay'] = ApiClient.convertToType(data['pearsonCorrelationWithNoOnsetDelay'], 'Number');
            }
            if (data.hasOwnProperty('predictivePearsonCorrelation')) {
                obj['predictivePearsonCorrelation'] = ApiClient.convertToType(data['predictivePearsonCorrelation'], 'Number');
            }
            if (data.hasOwnProperty('predictivePearsonCorrelationCoefficient')) {
                obj['predictivePearsonCorrelationCoefficient'] = ApiClient.convertToType(data['predictivePearsonCorrelationCoefficient'], 'Number');
            }
            if (data.hasOwnProperty('predictorDataSources')) {
                obj['predictorDataSources'] = ApiClient.convertToType(data['predictorDataSources'], 'String');
            }
            if (data.hasOwnProperty('predictorFillingValue')) {
                obj['predictorFillingValue'] = ApiClient.convertToType(data['predictorFillingValue'], 'Number');
            }
            if (data.hasOwnProperty('predictorMaximumAllowedValue')) {
                obj['predictorMaximumAllowedValue'] = ApiClient.convertToType(data['predictorMaximumAllowedValue'], 'Number');
            }
            if (data.hasOwnProperty('predictorMinimumAllowedValue')) {
                obj['predictorMinimumAllowedValue'] = ApiClient.convertToType(data['predictorMinimumAllowedValue'], 'Number');
            }
            if (data.hasOwnProperty('predictsHighEffectChange')) {
                obj['predictsHighEffectChange'] = ApiClient.convertToType(data['predictsHighEffectChange'], 'Number');
            }
            if (data.hasOwnProperty('predictsLowEffectChange')) {
                obj['predictsLowEffectChange'] = ApiClient.convertToType(data['predictsLowEffectChange'], 'Number');
            }
            if (data.hasOwnProperty('pValue')) {
                obj['pValue'] = ApiClient.convertToType(data['pValue'], 'Number');
            }
            if (data.hasOwnProperty('qmScore')) {
                obj['qmScore'] = ApiClient.convertToType(data['qmScore'], 'Number');
            }
            if (data.hasOwnProperty('reversePearsonCorrelationCoefficient')) {
                obj['reversePearsonCorrelationCoefficient'] = ApiClient.convertToType(data['reversePearsonCorrelationCoefficient'], 'Number');
            }
            if (data.hasOwnProperty('shareUserMeasurements')) {
                obj['shareUserMeasurements'] = ApiClient.convertToType(data['shareUserMeasurements'], 'Boolean');
            }
            if (data.hasOwnProperty('sharingDescription')) {
                obj['sharingDescription'] = ApiClient.convertToType(data['sharingDescription'], 'String');
            }
            if (data.hasOwnProperty('sharingTitle')) {
                obj['sharingTitle'] = ApiClient.convertToType(data['sharingTitle'], 'String');
            }
            if (data.hasOwnProperty('significantDifference')) {
                obj['significantDifference'] = ApiClient.convertToType(data['significantDifference'], 'Boolean');
            }
            if (data.hasOwnProperty('statisticalSignificance')) {
                obj['statisticalSignificance'] = ApiClient.convertToType(data['statisticalSignificance'], 'Number');
            }
            if (data.hasOwnProperty('strengthLevel')) {
                obj['strengthLevel'] = ApiClient.convertToType(data['strengthLevel'], 'String');
            }
            if (data.hasOwnProperty('strongestPearsonCorrelationCoefficient')) {
                obj['strongestPearsonCorrelationCoefficient'] = ApiClient.convertToType(data['strongestPearsonCorrelationCoefficient'], 'Number');
            }
            if (data.hasOwnProperty('studyHtml')) {
                obj['studyHtml'] = StudyHtml.constructFromObject(data['studyHtml']);
            }
            if (data.hasOwnProperty('studyImages')) {
                obj['studyImages'] = StudyImages.constructFromObject(data['studyImages']);
            }
            if (data.hasOwnProperty('studyLinks')) {
                obj['studyLinks'] = StudyLinks.constructFromObject(data['studyLinks']);
            }
            if (data.hasOwnProperty('studyText')) {
                obj['studyText'] = StudyText.constructFromObject(data['studyText']);
            }
            if (data.hasOwnProperty('tValue')) {
                obj['tValue'] = ApiClient.convertToType(data['tValue'], 'Number');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
            }
            if (data.hasOwnProperty('userVote')) {
                obj['userVote'] = ApiClient.convertToType(data['userVote'], 'Number');
            }
            if (data.hasOwnProperty('valuePredictingHighOutcome')) {
                obj['valuePredictingHighOutcome'] = ApiClient.convertToType(data['valuePredictingHighOutcome'], 'Number');
            }
            if (data.hasOwnProperty('valuePredictingLowOutcome')) {
                obj['valuePredictingLowOutcome'] = ApiClient.convertToType(data['valuePredictingLowOutcome'], 'Number');
            }
            if (data.hasOwnProperty('outcomeDataSources')) {
                obj['outcomeDataSources'] = ApiClient.convertToType(data['outcomeDataSources'], 'String');
            }
            if (data.hasOwnProperty('principalInvestigator')) {
                obj['principalInvestigator'] = ApiClient.convertToType(data['principalInvestigator'], 'String');
            }
            if (data.hasOwnProperty('reverseCorrelation')) {
                obj['reverseCorrelation'] = ApiClient.convertToType(data['reverseCorrelation'], 'Number');
            }
            if (data.hasOwnProperty('averagePearsonCorrelationCoefficientOverOnsetDelays')) {
                obj['averagePearsonCorrelationCoefficientOverOnsetDelays'] = ApiClient.convertToType(data['averagePearsonCorrelationCoefficientOverOnsetDelays'], 'String');
            }
            if (data.hasOwnProperty('causeNumberOfRawMeasurements')) {
                obj['causeNumberOfRawMeasurements'] = ApiClient.convertToType(data['causeNumberOfRawMeasurements'], 'Number');
            }
            if (data.hasOwnProperty('correlationsOverDurationsOfAction')) {
                obj['correlationsOverDurationsOfAction'] = ApiClient.convertToType(data['correlationsOverDurationsOfAction'], 'String');
            }
            if (data.hasOwnProperty('correlationsOverDurationsOfActionChartConfig')) {
                obj['correlationsOverDurationsOfActionChartConfig'] = ApiClient.convertToType(data['correlationsOverDurationsOfActionChartConfig'], 'String');
            }
            if (data.hasOwnProperty('correlationsOverOnsetDelaysChartConfig')) {
                obj['correlationsOverOnsetDelaysChartConfig'] = ApiClient.convertToType(data['correlationsOverOnsetDelaysChartConfig'], 'String');
            }
            if (data.hasOwnProperty('numberOfUsers')) {
                obj['numberOfUsers'] = ApiClient.convertToType(data['numberOfUsers'], 'Number');
            }
            if (data.hasOwnProperty('rawCauseMeasurementSignificance')) {
                obj['rawCauseMeasurementSignificance'] = ApiClient.convertToType(data['rawCauseMeasurementSignificance'], 'Number');
            }
            if (data.hasOwnProperty('rawEffectMeasurementSignificance')) {
                obj['rawEffectMeasurementSignificance'] = ApiClient.convertToType(data['rawEffectMeasurementSignificance'], 'Number');
            }
            if (data.hasOwnProperty('reversePairsCount')) {
                obj['reversePairsCount'] = ApiClient.convertToType(data['reversePairsCount'], 'String');
            }
            if (data.hasOwnProperty('voteStatisticalSignificance')) {
                obj['voteStatisticalSignificance'] = ApiClient.convertToType(data['voteStatisticalSignificance'], 'Number');
            }
            if (data.hasOwnProperty('aggregateQMScore')) {
                obj['aggregateQMScore'] = ApiClient.convertToType(data['aggregateQMScore'], 'Number');
            }
            if (data.hasOwnProperty('forwardPearsonCorrelationCoefficient')) {
                obj['forwardPearsonCorrelationCoefficient'] = ApiClient.convertToType(data['forwardPearsonCorrelationCoefficient'], 'Number');
            }
            if (data.hasOwnProperty('numberOfCorrelations')) {
                obj['numberOfCorrelations'] = ApiClient.convertToType(data['numberOfCorrelations'], 'Number');
            }
            if (data.hasOwnProperty('vote')) {
                obj['vote'] = ApiClient.convertToType(data['vote'], 'Number');
            }
        }
        return obj;
    }

    /**
    * Ex: 4.19
    * @member {Number} averageDailyHighCause
    */
    averageDailyHighCause = undefined;
    /**
    * Ex: 1.97
    * @member {Number} averageDailyLowCause
    */
    averageDailyLowCause = undefined;
    /**
    * Ex: 3.0791054117396
    * @member {Number} averageEffect
    */
    averageEffect = undefined;
    /**
    * Ex: 3.55
    * @member {Number} averageEffectFollowingHighCause
    */
    averageEffectFollowingHighCause = undefined;
    /**
    * Ex: 2.65
    * @member {Number} averageEffectFollowingLowCause
    */
    averageEffectFollowingLowCause = undefined;
    /**
    * Ex: 0.396
    * @member {Number} averageForwardPearsonCorrelationOverOnsetDelays
    */
    averageForwardPearsonCorrelationOverOnsetDelays = undefined;
    /**
    * Ex: 0.453667
    * @member {Number} averageReversePearsonCorrelationOverOnsetDelays
    */
    averageReversePearsonCorrelationOverOnsetDelays = undefined;
    /**
    * Ex: 0.9855
    * @member {Number} averageVote
    */
    averageVote = undefined;
    /**
    * Ex: 164
    * @member {Number} causeChanges
    */
    causeChanges = undefined;
    /**
    * @member {module:model/DataSource} causeDataSource
    */
    causeDataSource = undefined;
    /**
    * Ex: 1
    * @member {Number} causeUserVariableShareUserMeasurements
    */
    causeUserVariableShareUserMeasurements = undefined;
    /**
    * Ex: 6
    * @member {Number} causeVariableCategoryId
    */
    causeVariableCategoryId = undefined;
    /**
    * Ex: Sleep
    * @member {String} causeVariableCategoryName
    */
    causeVariableCategoryName = undefined;
    /**
    * Ex: MEAN
    * @member {String} causeVariableCombinationOperation
    */
    causeVariableCombinationOperation = undefined;
    /**
    * Ex: /5
    * @member {String} causeVariableUnitAbbreviatedName
    */
    causeVariableUnitAbbreviatedName = undefined;
    /**
    * Ex: 1448
    * @member {Number} causeVariableId
    */
    causeVariableId = undefined;
    /**
    * Ex: 6
    * @member {Number} causeVariableMostCommonConnectorId
    */
    causeVariableMostCommonConnectorId = undefined;
    /**
    * Ex: Sleep Quality
    * @member {String} causeVariableName
    */
    causeVariableName = undefined;
    /**
    * Ex: 0.14344467795996
    * @member {Number} confidenceInterval
    */
    confidenceInterval = undefined;
    /**
    * Ex: high
    * @member {String} confidenceLevel
    */
    confidenceLevel = undefined;
    /**
    * Ex: 0.538
    * @member {Number} correlationCoefficient
    */
    correlationCoefficient = undefined;
    /**
    * Ex: false
    * @member {Boolean} correlationIsContradictoryToOptimalValues
    */
    correlationIsContradictoryToOptimalValues = undefined;
    /**
    * Ex: 2016-12-28 20:47:30 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
    * @member {String} createdAt
    */
    createdAt = undefined;
    /**
    * Ex: 1.646
    * @member {Number} criticalTValue
    */
    criticalTValue = undefined;
    /**
    * Ex: higher
    * @member {String} direction
    */
    direction = undefined;
    /**
    * Ex: 604800
    * @member {Number} durationOfAction
    */
    durationOfAction = undefined;
    /**
    * Ex: 168
    * @member {Number} durationOfActionInHours
    */
    durationOfActionInHours = undefined;
    /**
    * Ex: 200
    * @member {Number} degreesOfFreedom
    */
    degreesOfFreedom = undefined;
    /**
    * Ex: 145
    * @member {Number} effectNumberOfProcessedDailyMeasurements
    */
    effectNumberOfProcessedDailyMeasurements = undefined;
    /**
    * Ex: optimalPearsonProduct is not defined
    * @member {String} error
    */
    error = undefined;
    /**
    * Ex: 193
    * @member {Number} effectChanges
    */
    effectChanges = undefined;
    /**
    * @member {module:model/DataSource} effectDataSource
    */
    effectDataSource = undefined;
    /**
    * Ex: moderately positive
    * @member {String} effectSize
    */
    effectSize = undefined;
    /**
    * Ex: /5
    * @member {String} effectUnit
    */
    effectUnit = undefined;
    /**
    * Ex: 1
    * @member {Number} effectUserVariableShareUserMeasurements
    */
    effectUserVariableShareUserMeasurements = undefined;
    /**
    * Ex: 1
    * @member {Number} effectVariableCategoryId
    */
    effectVariableCategoryId = undefined;
    /**
    * Ex: Emotions
    * @member {String} effectVariableCategoryName
    */
    effectVariableCategoryName = undefined;
    /**
    * Ex: MEAN
    * @member {String} effectVariableCombinationOperation
    */
    effectVariableCombinationOperation = undefined;
    /**
    * Ex: Mood_(psychology)
    * @member {String} effectVariableCommonAlias
    */
    effectVariableCommonAlias = undefined;
    /**
    * Ex: /5
    * @member {String} effectVariableUnitAbbreviatedName
    */
    effectVariableUnitAbbreviatedName = undefined;
    /**
    * Ex: 10
    * @member {Number} effectVariableUnitId
    */
    effectVariableUnitId = undefined;
    /**
    * Ex: 1 to 5 Rating
    * @member {String} effectVariableUnitName
    */
    effectVariableUnitName = undefined;
    /**
    * Ex: 1398
    * @member {Number} effectVariableId
    */
    effectVariableId = undefined;
    /**
    * Ex: 10
    * @member {Number} effectVariableMostCommonConnectorId
    */
    effectVariableMostCommonConnectorId = undefined;
    /**
    * Ex: Overall Mood
    * @member {String} effectVariableName
    */
    effectVariableName = undefined;
    /**
    * Ex: 2014-07-30 12:50:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
    * @member {String} experimentEndTime
    */
    experimentEndTime = undefined;
    /**
    * Ex: 2012-05-06 21:15:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
    * @member {String} experimentStartTime
    */
    experimentStartTime = undefined;
    /**
    * Ex: 0.528359
    * @member {Number} forwardSpearmanCorrelationCoefficient
    */
    forwardSpearmanCorrelationCoefficient = undefined;
    /**
    * Ex: 298
    * @member {Number} numberOfPairs
    */
    numberOfPairs = undefined;
    /**
    * Ex: 0
    * @member {Number} onsetDelay
    */
    onsetDelay = undefined;
    /**
    * Ex: 0
    * @member {Number} onsetDelayInHours
    */
    onsetDelayInHours = undefined;
    /**
    * Ex: -86400
    * @member {Number} onsetDelayWithStrongestPearsonCorrelation
    */
    onsetDelayWithStrongestPearsonCorrelation = undefined;
    /**
    * Ex: -24
    * @member {Number} onsetDelayWithStrongestPearsonCorrelationInHours
    */
    onsetDelayWithStrongestPearsonCorrelationInHours = undefined;
    /**
    * Ex: 0.68582816186982
    * @member {Number} optimalPearsonProduct
    */
    optimalPearsonProduct = undefined;
    /**
    * Ex: -1
    * @member {Number} outcomeFillingValue
    */
    outcomeFillingValue = undefined;
    /**
    * Ex: 23
    * @member {Number} outcomeMaximumAllowedValue
    */
    outcomeMaximumAllowedValue = undefined;
    /**
    * Ex: 0.1
    * @member {Number} outcomeMinimumAllowedValue
    */
    outcomeMinimumAllowedValue = undefined;
    /**
    * Ex: 0.477
    * @member {Number} pearsonCorrelationWithNoOnsetDelay
    */
    pearsonCorrelationWithNoOnsetDelay = undefined;
    /**
    * Ex: 0.538
    * @member {Number} predictivePearsonCorrelation
    */
    predictivePearsonCorrelation = undefined;
    /**
    * Ex: 0.538
    * @member {Number} predictivePearsonCorrelationCoefficient
    */
    predictivePearsonCorrelationCoefficient = undefined;
    /**
    * Ex: RescueTime
    * @member {String} predictorDataSources
    */
    predictorDataSources = undefined;
    /**
    * Ex: -1
    * @member {Number} predictorFillingValue
    */
    predictorFillingValue = undefined;
    /**
    * Ex: 200
    * @member {Number} predictorMaximumAllowedValue
    */
    predictorMaximumAllowedValue = undefined;
    /**
    * Ex: 30
    * @member {Number} predictorMinimumAllowedValue
    */
    predictorMinimumAllowedValue = undefined;
    /**
    * Ex: 17
    * @member {Number} predictsHighEffectChange
    */
    predictsHighEffectChange = undefined;
    /**
    * Ex: -11
    * @member {Number} predictsLowEffectChange
    */
    predictsLowEffectChange = undefined;
    /**
    * Ex: 0.39628900511586
    * @member {Number} pValue
    */
    pValue = undefined;
    /**
    * Ex: 0.528
    * @member {Number} qmScore
    */
    qmScore = undefined;
    /**
    * Ex: 0.01377184270977
    * @member {Number} reversePearsonCorrelationCoefficient
    */
    reversePearsonCorrelationCoefficient = undefined;
    /**
    * Ex: 1
    * @member {Boolean} shareUserMeasurements
    */
    shareUserMeasurements = undefined;
    /**
    * Ex: N1 Study: Sleep Quality Predicts Higher Overall Mood
    * @member {String} sharingDescription
    */
    sharingDescription = undefined;
    /**
    * Ex: N1 Study: Sleep Quality Predicts Higher Overall Mood
    * @member {String} sharingTitle
    */
    sharingTitle = undefined;
    /**
    * Ex: 1
    * @member {Boolean} significantDifference
    */
    significantDifference = undefined;
    /**
    * Ex: 0.9813
    * @member {Number} statisticalSignificance
    */
    statisticalSignificance = undefined;
    /**
    * Ex: moderate
    * @member {String} strengthLevel
    */
    strengthLevel = undefined;
    /**
    * Ex: 0.613
    * @member {Number} strongestPearsonCorrelationCoefficient
    */
    strongestPearsonCorrelationCoefficient = undefined;
    /**
    * @member {module:model/StudyHtml} studyHtml
    */
    studyHtml = undefined;
    /**
    * @member {module:model/StudyImages} studyImages
    */
    studyImages = undefined;
    /**
    * @member {module:model/StudyLinks} studyLinks
    */
    studyLinks = undefined;
    /**
    * @member {module:model/StudyText} studyText
    */
    studyText = undefined;
    /**
    * Ex: 9.6986079652717
    * @member {Number} tValue
    */
    tValue = undefined;
    /**
    * Ex: 2017-05-06 15:40:38 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
    * @member {String} updatedAt
    */
    updatedAt = undefined;
    /**
    * Ex: 230
    * @member {Number} userId
    */
    userId = undefined;
    /**
    * Ex: 1
    * @member {Number} userVote
    */
    userVote = undefined;
    /**
    * Ex: 4.14
    * @member {Number} valuePredictingHighOutcome
    */
    valuePredictingHighOutcome = undefined;
    /**
    * Ex: 3.03
    * @member {Number} valuePredictingLowOutcome
    */
    valuePredictingLowOutcome = undefined;
    /**
    * original name of the cause.
    * @member {String} outcomeDataSources
    */
    outcomeDataSources = undefined;
    /**
    * Mike Sinn
    * @member {String} principalInvestigator
    */
    principalInvestigator = undefined;
    /**
    * Correlation when cause and effect are reversed. For any causal relationship, the forward correlation should exceed the reverse correlation.
    * @member {Number} reverseCorrelation
    */
    reverseCorrelation = undefined;
    /**
    * Ex: 
    * @member {String} averagePearsonCorrelationCoefficientOverOnsetDelays
    */
    averagePearsonCorrelationCoefficientOverOnsetDelays = undefined;
    /**
    * Ex: 14764
    * @member {Number} causeNumberOfRawMeasurements
    */
    causeNumberOfRawMeasurements = undefined;
    /**
    * Ex: 
    * @member {String} correlationsOverDurationsOfAction
    */
    correlationsOverDurationsOfAction = undefined;
    /**
    * Ex: 
    * @member {String} correlationsOverDurationsOfActionChartConfig
    */
    correlationsOverDurationsOfActionChartConfig = undefined;
    /**
    * Ex: 
    * @member {String} correlationsOverOnsetDelaysChartConfig
    */
    correlationsOverOnsetDelaysChartConfig = undefined;
    /**
    * Ex: 1
    * @member {Number} numberOfUsers
    */
    numberOfUsers = undefined;
    /**
    * Ex: 1
    * @member {Number} rawCauseMeasurementSignificance
    */
    rawCauseMeasurementSignificance = undefined;
    /**
    * Ex: 1
    * @member {Number} rawEffectMeasurementSignificance
    */
    rawEffectMeasurementSignificance = undefined;
    /**
    * Ex: 1
    * @member {String} reversePairsCount
    */
    reversePairsCount = undefined;
    /**
    * Ex: 1
    * @member {Number} voteStatisticalSignificance
    */
    voteStatisticalSignificance = undefined;
    /**
    * Ex: 0.011598441286655
    * @member {Number} aggregateQMScore
    */
    aggregateQMScore = undefined;
    /**
    * Ex: 0.0333
    * @member {Number} forwardPearsonCorrelationCoefficient
    */
    forwardPearsonCorrelationCoefficient = undefined;
    /**
    * Ex: 6
    * @member {Number} numberOfCorrelations
    */
    numberOfCorrelations = undefined;
    /**
    * Ex: 1 or 0
    * @member {Number} vote
    */
    vote = undefined;








}


