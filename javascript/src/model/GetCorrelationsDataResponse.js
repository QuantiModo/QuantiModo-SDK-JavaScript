/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Correlation from './Correlation';
import Explanation from './Explanation';





/**
* The GetCorrelationsDataResponse model module.
* @module model/GetCorrelationsDataResponse
* @version 2.0
*/
export default class GetCorrelationsDataResponse {
    /**
    * Constructs a new <code>GetCorrelationsDataResponse</code>.
    * @alias module:model/GetCorrelationsDataResponse
    * @class
    * @param correlations {Array.<module:model/Correlation>} 
    * @param explanation {module:model/Explanation} 
    */

    constructor(correlations, explanation) {
        

        
        

        this['correlations'] = correlations;this['explanation'] = explanation;

        
    }

    /**
    * Constructs a <code>GetCorrelationsDataResponse</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/GetCorrelationsDataResponse} obj Optional instance to populate.
    * @return {module:model/GetCorrelationsDataResponse} The populated <code>GetCorrelationsDataResponse</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCorrelationsDataResponse();

            
            
            

            if (data.hasOwnProperty('correlations')) {
                obj['correlations'] = ApiClient.convertToType(data['correlations'], [Correlation]);
            }
            if (data.hasOwnProperty('explanation')) {
                obj['explanation'] = Explanation.constructFromObject(data['explanation']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
        }
        return obj;
    }

    /**
    * @member {Array.<module:model/Correlation>} correlations
    */
    correlations = undefined;
    /**
    * @member {module:model/Explanation} explanation
    */
    explanation = undefined;
    /**
    * Can be used as body of help info popup
    * @member {String} description
    */
    description = undefined;
    /**
    * Can be used as title in help info popup
    * @member {String} summary
    */
    summary = undefined;








}


