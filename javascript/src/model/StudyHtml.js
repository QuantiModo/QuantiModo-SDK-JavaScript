/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The StudyHtml model module.
* @module model/StudyHtml
* @version 2.0
*/
export default class StudyHtml {
    /**
    * Constructs a new <code>StudyHtml</code>.
    * @alias module:model/StudyHtml
    * @class
    * @param chartHtml {String} Embeddable chart html
    * @param fullStudyHtml {String} Embeddable study text html including charts.  Modifiable css classes are study-title, study-section-header, study-section-body
    */

    constructor(chartHtml, fullStudyHtml) {
        

        
        

        this['chartHtml'] = chartHtml;this['fullStudyHtml'] = fullStudyHtml;

        
    }

    /**
    * Constructs a <code>StudyHtml</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/StudyHtml} obj Optional instance to populate.
    * @return {module:model/StudyHtml} The populated <code>StudyHtml</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StudyHtml();

            
            
            

            if (data.hasOwnProperty('chartHtml')) {
                obj['chartHtml'] = ApiClient.convertToType(data['chartHtml'], 'String');
            }
            if (data.hasOwnProperty('downloadButtonsHtml')) {
                obj['downloadButtonsHtml'] = ApiClient.convertToType(data['downloadButtonsHtml'], 'String');
            }
            if (data.hasOwnProperty('fullPageWithHead')) {
                obj['fullPageWithHead'] = ApiClient.convertToType(data['fullPageWithHead'], 'String');
            }
            if (data.hasOwnProperty('fullStudyHtml')) {
                obj['fullStudyHtml'] = ApiClient.convertToType(data['fullStudyHtml'], 'String');
            }
            if (data.hasOwnProperty('fullStudyHtmlWithCssStyles')) {
                obj['fullStudyHtmlWithCssStyles'] = ApiClient.convertToType(data['fullStudyHtmlWithCssStyles'], 'String');
            }
            if (data.hasOwnProperty('statisticsTableHtml')) {
                obj['statisticsTableHtml'] = ApiClient.convertToType(data['statisticsTableHtml'], 'String');
            }
            if (data.hasOwnProperty('studyAbstractHtml')) {
                obj['studyAbstractHtml'] = ApiClient.convertToType(data['studyAbstractHtml'], 'String');
            }
            if (data.hasOwnProperty('studyHeaderHtml')) {
                obj['studyHeaderHtml'] = ApiClient.convertToType(data['studyHeaderHtml'], 'String');
            }
            if (data.hasOwnProperty('studyImageHtml')) {
                obj['studyImageHtml'] = ApiClient.convertToType(data['studyImageHtml'], 'String');
            }
            if (data.hasOwnProperty('studyMetaHtml')) {
                obj['studyMetaHtml'] = ApiClient.convertToType(data['studyMetaHtml'], 'String');
            }
            if (data.hasOwnProperty('studyTextHtml')) {
                obj['studyTextHtml'] = ApiClient.convertToType(data['studyTextHtml'], 'String');
            }
            if (data.hasOwnProperty('socialSharingButtonHtml')) {
                obj['socialSharingButtonHtml'] = ApiClient.convertToType(data['socialSharingButtonHtml'], 'String');
            }
            if (data.hasOwnProperty('studySummaryBoxHtml')) {
                obj['studySummaryBoxHtml'] = ApiClient.convertToType(data['studySummaryBoxHtml'], 'String');
            }
        }
        return obj;
    }

    /**
    * Embeddable chart html
    * @member {String} chartHtml
    */
    chartHtml = undefined;
    /**
    * Play Store, App Store, Chrome Web Store
    * @member {String} downloadButtonsHtml
    */
    downloadButtonsHtml = undefined;
    /**
    * Embeddable study including HTML head section charts.  Modifiable css classes are study-title, study-section-header, study-section-body
    * @member {String} fullPageWithHead
    */
    fullPageWithHead = undefined;
    /**
    * Embeddable study text html including charts.  Modifiable css classes are study-title, study-section-header, study-section-body
    * @member {String} fullStudyHtml
    */
    fullStudyHtml = undefined;
    /**
    * Embeddable study html including charts and css styling
    * @member {String} fullStudyHtmlWithCssStyles
    */
    fullStudyHtmlWithCssStyles = undefined;
    /**
    * Embeddable table with statistics
    * @member {String} statisticsTableHtml
    */
    statisticsTableHtml = undefined;
    /**
    * Text summary
    * @member {String} studyAbstractHtml
    */
    studyAbstractHtml = undefined;
    /**
    * Title, study image, abstract with CSS styling
    * @member {String} studyHeaderHtml
    */
    studyHeaderHtml = undefined;
    /**
    * PNG image
    * @member {String} studyImageHtml
    */
    studyImageHtml = undefined;
    /**
    * Facebook, Twitter, Google+
    * @member {String} studyMetaHtml
    */
    studyMetaHtml = undefined;
    /**
    * Formatted study text sections
    * @member {String} studyTextHtml
    */
    studyTextHtml = undefined;
    /**
    * 
    * @member {String} socialSharingButtonHtml
    */
    socialSharingButtonHtml = undefined;
    /**
    * 
    * @member {String} studySummaryBoxHtml
    */
    studySummaryBoxHtml = undefined;








}


