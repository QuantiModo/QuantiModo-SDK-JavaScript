/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.quantimodo-api);
  }
}(this, function(expect, quantimodo-api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new quantimodo-api.AppSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AppSettings', function() {
    it('should create an instance of AppSettings', function() {
      // uncomment below and update the code to test AppSettings
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be.a(quantimodo-api.AppSettings);
    });

    it('should have the property additionalSettings (base name: "additionalSettings")', function() {
      // uncomment below and update the code to test the property additionalSettings
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property appDescription (base name: "appDescription")', function() {
      // uncomment below and update the code to test the property appDescription
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property appDesign (base name: "appDesign")', function() {
      // uncomment below and update the code to test the property appDesign
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property appDisplayName (base name: "appDisplayName")', function() {
      // uncomment below and update the code to test the property appDisplayName
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property appStatus (base name: "appStatus")', function() {
      // uncomment below and update the code to test the property appStatus
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property appType (base name: "appType")', function() {
      // uncomment below and update the code to test the property appType
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property buildEnabled (base name: "buildEnabled")', function() {
      // uncomment below and update the code to test the property buildEnabled
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "clientId")', function() {
      // uncomment below and update the code to test the property clientId
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property clientSecret (base name: "clientSecret")', function() {
      // uncomment below and update the code to test the property clientSecret
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property collaborators (base name: "collaborators")', function() {
      // uncomment below and update the code to test the property collaborators
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property userId (base name: "userId")', function() {
      // uncomment below and update the code to test the property userId
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property users (base name: "users")', function() {
      // uncomment below and update the code to test the property users
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property redirectUri (base name: "redirectUri")', function() {
      // uncomment below and update the code to test the property redirectUri
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "companyName")', function() {
      // uncomment below and update the code to test the property companyName
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property homepageUrl (base name: "homepageUrl")', function() {
      // uncomment below and update the code to test the property homepageUrl
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property iconUrl (base name: "iconUrl")', function() {
      // uncomment below and update the code to test the property iconUrl
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property longDescription (base name: "longDescription")', function() {
      // uncomment below and update the code to test the property longDescription
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property splashScreen (base name: "splashScreen")', function() {
      // uncomment below and update the code to test the property splashScreen
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

    it('should have the property textLogo (base name: "textLogo")', function() {
      // uncomment below and update the code to test the property textLogo
      //var instane = new quantimodo-api.AppSettings();
      //expect(instance).to.be();
    });

  });

}));
